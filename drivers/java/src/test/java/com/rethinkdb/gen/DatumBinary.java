// Autogenerated by convert_tests.py and process_polyglot.py.
// Do not edit this file directly.
// The template for this file is located at:
// ../../../../../../../templates/Test.java
package com.rethinkdb.gen;

import com.rethinkdb.RethinkDB;
import com.rethinkdb.gen.exc.*;
import com.rethinkdb.gen.ast.*;
import com.rethinkdb.ast.ReqlAst;
import com.rethinkdb.model.MapObject;
import com.rethinkdb.model.OptArgs;
import com.rethinkdb.net.Connection;
import com.rethinkdb.net.Cursor;
import junit.framework.TestCase;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertArrayEquals;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.junit.*;
import org.junit.rules.ExpectedException;

import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import java.time.Instant;
import java.util.stream.LongStream;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.concurrent.TimeoutException;
import java.util.regex.Pattern;
import java.util.Collections;
import java.nio.charset.StandardCharsets;

import static com.rethinkdb.TestingCommon.*;
import com.rethinkdb.TestingFramework;

public class DatumBinary {
    // Tests of converstion to and from the RQL binary type
    Logger logger = LoggerFactory.getLogger(DatumBinary.class);
    public static final RethinkDB r = RethinkDB.r;

    Connection conn;

    @Before
    public void setUp() throws Exception {
        logger.info("Setting up.");
        conn = TestingFramework.createConnection();
        try {
            r.dbCreate("test").run(conn);
            r.db("test").wait_().run(conn);
        }catch (Exception e){}
    }

    @After
    public void tearDown() throws Exception {
        logger.info("Tearing down.");
        r.db("rethinkdb").table("_debug_scratch").delete().run(conn);
        if(!conn.isOpen()){
            conn.close();
            conn = TestingFramework.createConnection();
        }
        r.dbDrop("test").run(conn);
        conn.close(false);
    }

    // Matches Python's str() function, which we use.
    // TODO: We might want to handle this in a visit_Call in convert_tests.py instead.
    private static String str(long i) {
        return String.valueOf(i);
    }

    // A hack to concatenate two List<Long>s -- see is_array_add in convert_tests.py.
    private static List<Long> concatLong(List<Long> x, List<Long> y) {
        List<Long> ret = new ArrayList<Long>(x);
        ret.addAll(y);
        return ret;
    }

    // Autogenerated tests below

    @Test(timeout=120000)
    public void test() throws Exception {

        // datum/binary.yaml line #8
        // s = b''
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{});");
        byte[] s = (byte[]) (new byte[]{});

        {
            // datum/binary.yaml line #10
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #10: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #10");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #10:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #12
            /* 0 */
            Long expected_ = 0L;
            /* r.binary(s).count() */
            logger.info("About to run line #12: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #12");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #12:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #17
        // s = b'\x00'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{0});");
        s = ((byte[]) (new byte[]{0}));

        {
            // datum/binary.yaml line #19
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #19: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #19");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #19:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #21
            /* 1 */
            Long expected_ = 1L;
            /* r.binary(s).count() */
            logger.info("About to run line #21: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #21");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #21:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #26
        // s = b'\x00\x42'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{0, 66});");
        s = ((byte[]) (new byte[]{0, 66}));

        {
            // datum/binary.yaml line #28
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #28: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #28");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #28:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #30
            /* 2 */
            Long expected_ = 2L;
            /* r.binary(s).count() */
            logger.info("About to run line #30: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #30");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #30:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #35
        // s = b'\x00\xfe\x7a'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{0, -2, 122});");
        s = ((byte[]) (new byte[]{0, -2, 122}));

        {
            // datum/binary.yaml line #37
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #37: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #37");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #37:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #39
            /* 3 */
            Long expected_ = 3L;
            /* r.binary(s).count() */
            logger.info("About to run line #39: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #39");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #39:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #44
        // s = b'\xed\xfe\x00\xba'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{-19, -2, 0, -70});");
        s = ((byte[]) (new byte[]{-19, -2, 0, -70}));

        {
            // datum/binary.yaml line #46
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #46: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #46");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #46:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #48
            /* 4 */
            Long expected_ = 4L;
            /* r.binary(s).count() */
            logger.info("About to run line #48: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #48");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #48:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #53
        // s = b'\x50\xf9\x00\x77\xf9'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{80, -7, 0, 119, -7});");
        s = ((byte[]) (new byte[]{80, -7, 0, 119, -7}));

        {
            // datum/binary.yaml line #55
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #55: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #55");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #55:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #57
            /* 5 */
            Long expected_ = 5L;
            /* r.binary(s).count() */
            logger.info("About to run line #57: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #57");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #57:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #62
        // s = b'\x2f\xe3\xb5\x57\x00\x92'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{47, -29, -75, 87, 0, -110});");
        s = ((byte[]) (new byte[]{47, -29, -75, 87, 0, -110}));

        {
            // datum/binary.yaml line #64
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #64: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #64");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #64:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #66
            /* 6 */
            Long expected_ = 6L;
            /* r.binary(s).count() */
            logger.info("About to run line #66: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #66");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #66:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #71
        // s = b'\xa9\x43\x54\xe9\x00\xf8\xfb'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{-87, 67, 84, -23, 0, -8, -5});");
        s = ((byte[]) (new byte[]{-87, 67, 84, -23, 0, -8, -5}));

        {
            // datum/binary.yaml line #73
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #73: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #73");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #73:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #75
            /* 7 */
            Long expected_ = 7L;
            /* r.binary(s).count() */
            logger.info("About to run line #75: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #75");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #75:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #80
        // s = b'\x57\xbb\xe5\x82\x8b\xd3\x00\xf9'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{87, -69, -27, -126, -117, -45, 0, -7});");
        s = ((byte[]) (new byte[]{87, -69, -27, -126, -117, -45, 0, -7}));

        {
            // datum/binary.yaml line #82
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #82: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #82");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #82:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #84
            /* 8 */
            Long expected_ = 8L;
            /* r.binary(s).count() */
            logger.info("About to run line #84: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #84");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #84:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #89
        // s = b'\x44\x1b\x3e\x00\x13\x19\x29\x2a\xbf'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{68, 27, 62, 0, 19, 25, 41, 42, -65});");
        s = ((byte[]) (new byte[]{68, 27, 62, 0, 19, 25, 41, 42, -65}));

        {
            // datum/binary.yaml line #91
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #91: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #91");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #91:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #93
            /* 9 */
            Long expected_ = 9L;
            /* r.binary(s).count() */
            logger.info("About to run line #93: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #93");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #93:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #98
        // s = b'\x8a\x1d\x09\x00\x5d\x60\x6b\x2e\x70\xd9'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{-118, 29, 9, 0, 93, 96, 107, 46, 112, -39});");
        s = ((byte[]) (new byte[]{-118, 29, 9, 0, 93, 96, 107, 46, 112, -39}));

        {
            // datum/binary.yaml line #100
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #100: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #100");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #100:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #102
            /* 10 */
            Long expected_ = 10L;
            /* r.binary(s).count() */
            logger.info("About to run line #102: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #102");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #102:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #107
        // s = b'\x00\xaf\x47\x4b\x38\x99\x14\x8d\x8f\x10\x51'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{0, -81, 71, 75, 56, -103, 20, -115, -113, 16, 81});");
        s = ((byte[]) (new byte[]{0, -81, 71, 75, 56, -103, 20, -115, -113, 16, 81}));

        {
            // datum/binary.yaml line #109
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #109: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #109");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #109:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #111
            /* 11 */
            Long expected_ = 11L;
            /* r.binary(s).count() */
            logger.info("About to run line #111: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #111");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #111:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #116
        // s = b'\x45\x39\x00\xf7\xc2\x37\xfd\xe0\x38\x82\x40\xa9'
        logger.info("Possibly executing: byte[] s = (byte[]) (new byte[]{69, 57, 0, -9, -62, 55, -3, -32, 56, -126, 64, -87});");
        s = ((byte[]) (new byte[]{69, 57, 0, -9, -62, 55, -3, -32, 56, -126, 64, -87}));

        {
            // datum/binary.yaml line #118
            /* s */
            byte[] expected_ = s;
            /* r.binary(s) */
            logger.info("About to run line #118: r.binary(s)");
            Object obtained = runOrCatch(r.binary(s),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #118");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #118:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #120
            /* 12 */
            Long expected_ = 12L;
            /* r.binary(s).count() */
            logger.info("About to run line #120: r.binary(s).count()");
            Object obtained = runOrCatch(r.binary(s).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #120");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #120:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        // datum/binary.yaml line #128
        // a = b'\x00'
        logger.info("Possibly executing: byte[] a = (byte[]) (new byte[]{0});");
        byte[] a = (byte[]) (new byte[]{0});

        // datum/binary.yaml line #132
        // b = b'\x00\x01'
        logger.info("Possibly executing: byte[] b = (byte[]) (new byte[]{0, 1});");
        byte[] b = (byte[]) (new byte[]{0, 1});

        // datum/binary.yaml line #136
        // c = b'\x01'
        logger.info("Possibly executing: byte[] c = (byte[]) (new byte[]{1});");
        byte[] c = (byte[]) (new byte[]{1});

        // datum/binary.yaml line #140
        // d = b'\x70\x22'
        logger.info("Possibly executing: byte[] d = (byte[]) (new byte[]{112, 34});");
        byte[] d = (byte[]) (new byte[]{112, 34});

        // datum/binary.yaml line #144
        // e = b'\x80'
        logger.info("Possibly executing: byte[] e = (byte[]) (new byte[]{-128});");
        byte[] e = (byte[]) (new byte[]{-128});

        // datum/binary.yaml line #148
        // f = b'\xFE'
        logger.info("Possibly executing: byte[] f = (byte[]) (new byte[]{-2});");
        byte[] f = (byte[]) (new byte[]{-2});

        {
            // datum/binary.yaml line #151
            /* true */
            Boolean expected_ = true;
            /* r.binary(a).eq(r.binary(a)) */
            logger.info("About to run line #151: r.binary(a).eq(r.binary(a))");
            Object obtained = runOrCatch(r.binary(a).eq(r.binary(a)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #151");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #151:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #153
            /* true */
            Boolean expected_ = true;
            /* r.binary(a).le(r.binary(a)) */
            logger.info("About to run line #153: r.binary(a).le(r.binary(a))");
            Object obtained = runOrCatch(r.binary(a).le(r.binary(a)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #153");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #153:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #155
            /* true */
            Boolean expected_ = true;
            /* r.binary(a).ge(r.binary(a)) */
            logger.info("About to run line #155: r.binary(a).ge(r.binary(a))");
            Object obtained = runOrCatch(r.binary(a).ge(r.binary(a)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #155");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #155:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #157
            /* false */
            Boolean expected_ = false;
            /* r.binary(a).ne(r.binary(a)) */
            logger.info("About to run line #157: r.binary(a).ne(r.binary(a))");
            Object obtained = runOrCatch(r.binary(a).ne(r.binary(a)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #157");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #157:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #159
            /* false */
            Boolean expected_ = false;
            /* r.binary(a).lt(r.binary(a)) */
            logger.info("About to run line #159: r.binary(a).lt(r.binary(a))");
            Object obtained = runOrCatch(r.binary(a).lt(r.binary(a)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #159");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #159:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #161
            /* false */
            Boolean expected_ = false;
            /* r.binary(a).gt(r.binary(a)) */
            logger.info("About to run line #161: r.binary(a).gt(r.binary(a))");
            Object obtained = runOrCatch(r.binary(a).gt(r.binary(a)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #161");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #161:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #165
            /* true */
            Boolean expected_ = true;
            /* r.binary(a).ne(r.binary(b)) */
            logger.info("About to run line #165: r.binary(a).ne(r.binary(b))");
            Object obtained = runOrCatch(r.binary(a).ne(r.binary(b)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #165");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #165:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #167
            /* true */
            Boolean expected_ = true;
            /* r.binary(a).lt(r.binary(b)) */
            logger.info("About to run line #167: r.binary(a).lt(r.binary(b))");
            Object obtained = runOrCatch(r.binary(a).lt(r.binary(b)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #167");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #167:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #169
            /* true */
            Boolean expected_ = true;
            /* r.binary(a).le(r.binary(b)) */
            logger.info("About to run line #169: r.binary(a).le(r.binary(b))");
            Object obtained = runOrCatch(r.binary(a).le(r.binary(b)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #169");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #169:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #171
            /* false */
            Boolean expected_ = false;
            /* r.binary(a).ge(r.binary(b)) */
            logger.info("About to run line #171: r.binary(a).ge(r.binary(b))");
            Object obtained = runOrCatch(r.binary(a).ge(r.binary(b)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #171");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #171:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #173
            /* false */
            Boolean expected_ = false;
            /* r.binary(a).gt(r.binary(b)) */
            logger.info("About to run line #173: r.binary(a).gt(r.binary(b))");
            Object obtained = runOrCatch(r.binary(a).gt(r.binary(b)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #173");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #173:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #175
            /* false */
            Boolean expected_ = false;
            /* r.binary(a).eq(r.binary(b)) */
            logger.info("About to run line #175: r.binary(a).eq(r.binary(b))");
            Object obtained = runOrCatch(r.binary(a).eq(r.binary(b)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #175");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #175:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #179
            /* true */
            Boolean expected_ = true;
            /* r.binary(b).ne(r.binary(c)) */
            logger.info("About to run line #179: r.binary(b).ne(r.binary(c))");
            Object obtained = runOrCatch(r.binary(b).ne(r.binary(c)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #179");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #179:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #181
            /* true */
            Boolean expected_ = true;
            /* r.binary(b).lt(r.binary(c)) */
            logger.info("About to run line #181: r.binary(b).lt(r.binary(c))");
            Object obtained = runOrCatch(r.binary(b).lt(r.binary(c)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #181");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #181:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #183
            /* true */
            Boolean expected_ = true;
            /* r.binary(b).le(r.binary(c)) */
            logger.info("About to run line #183: r.binary(b).le(r.binary(c))");
            Object obtained = runOrCatch(r.binary(b).le(r.binary(c)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #183");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #183:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #185
            /* false */
            Boolean expected_ = false;
            /* r.binary(b).ge(r.binary(c)) */
            logger.info("About to run line #185: r.binary(b).ge(r.binary(c))");
            Object obtained = runOrCatch(r.binary(b).ge(r.binary(c)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #185");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #185:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #187
            /* false */
            Boolean expected_ = false;
            /* r.binary(b).gt(r.binary(c)) */
            logger.info("About to run line #187: r.binary(b).gt(r.binary(c))");
            Object obtained = runOrCatch(r.binary(b).gt(r.binary(c)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #187");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #187:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #189
            /* false */
            Boolean expected_ = false;
            /* r.binary(b).eq(r.binary(c)) */
            logger.info("About to run line #189: r.binary(b).eq(r.binary(c))");
            Object obtained = runOrCatch(r.binary(b).eq(r.binary(c)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #189");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #189:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #193
            /* true */
            Boolean expected_ = true;
            /* r.binary(c).ne(r.binary(d)) */
            logger.info("About to run line #193: r.binary(c).ne(r.binary(d))");
            Object obtained = runOrCatch(r.binary(c).ne(r.binary(d)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #193");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #193:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #195
            /* true */
            Boolean expected_ = true;
            /* r.binary(c).lt(r.binary(d)) */
            logger.info("About to run line #195: r.binary(c).lt(r.binary(d))");
            Object obtained = runOrCatch(r.binary(c).lt(r.binary(d)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #195");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #195:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #197
            /* true */
            Boolean expected_ = true;
            /* r.binary(c).le(r.binary(d)) */
            logger.info("About to run line #197: r.binary(c).le(r.binary(d))");
            Object obtained = runOrCatch(r.binary(c).le(r.binary(d)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #197");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #197:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #199
            /* false */
            Boolean expected_ = false;
            /* r.binary(c).ge(r.binary(d)) */
            logger.info("About to run line #199: r.binary(c).ge(r.binary(d))");
            Object obtained = runOrCatch(r.binary(c).ge(r.binary(d)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #199");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #199:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #201
            /* false */
            Boolean expected_ = false;
            /* r.binary(c).gt(r.binary(d)) */
            logger.info("About to run line #201: r.binary(c).gt(r.binary(d))");
            Object obtained = runOrCatch(r.binary(c).gt(r.binary(d)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #201");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #201:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #203
            /* false */
            Boolean expected_ = false;
            /* r.binary(c).eq(r.binary(d)) */
            logger.info("About to run line #203: r.binary(c).eq(r.binary(d))");
            Object obtained = runOrCatch(r.binary(c).eq(r.binary(d)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #203");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #203:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #207
            /* true */
            Boolean expected_ = true;
            /* r.binary(d).ne(r.binary(e)) */
            logger.info("About to run line #207: r.binary(d).ne(r.binary(e))");
            Object obtained = runOrCatch(r.binary(d).ne(r.binary(e)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #207");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #207:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #209
            /* true */
            Boolean expected_ = true;
            /* r.binary(d).lt(r.binary(e)) */
            logger.info("About to run line #209: r.binary(d).lt(r.binary(e))");
            Object obtained = runOrCatch(r.binary(d).lt(r.binary(e)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #209");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #209:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #211
            /* true */
            Boolean expected_ = true;
            /* r.binary(d).le(r.binary(e)) */
            logger.info("About to run line #211: r.binary(d).le(r.binary(e))");
            Object obtained = runOrCatch(r.binary(d).le(r.binary(e)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #211");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #211:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #213
            /* false */
            Boolean expected_ = false;
            /* r.binary(d).ge(r.binary(e)) */
            logger.info("About to run line #213: r.binary(d).ge(r.binary(e))");
            Object obtained = runOrCatch(r.binary(d).ge(r.binary(e)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #213");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #213:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #215
            /* false */
            Boolean expected_ = false;
            /* r.binary(d).gt(r.binary(e)) */
            logger.info("About to run line #215: r.binary(d).gt(r.binary(e))");
            Object obtained = runOrCatch(r.binary(d).gt(r.binary(e)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #215");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #215:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #217
            /* false */
            Boolean expected_ = false;
            /* r.binary(d).eq(r.binary(e)) */
            logger.info("About to run line #217: r.binary(d).eq(r.binary(e))");
            Object obtained = runOrCatch(r.binary(d).eq(r.binary(e)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #217");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #217:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #221
            /* true */
            Boolean expected_ = true;
            /* r.binary(e).ne(r.binary(f)) */
            logger.info("About to run line #221: r.binary(e).ne(r.binary(f))");
            Object obtained = runOrCatch(r.binary(e).ne(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #221");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #221:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #223
            /* true */
            Boolean expected_ = true;
            /* r.binary(e).lt(r.binary(f)) */
            logger.info("About to run line #223: r.binary(e).lt(r.binary(f))");
            Object obtained = runOrCatch(r.binary(e).lt(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #223");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #223:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #225
            /* true */
            Boolean expected_ = true;
            /* r.binary(e).le(r.binary(f)) */
            logger.info("About to run line #225: r.binary(e).le(r.binary(f))");
            Object obtained = runOrCatch(r.binary(e).le(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #225");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #225:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #227
            /* false */
            Boolean expected_ = false;
            /* r.binary(e).ge(r.binary(f)) */
            logger.info("About to run line #227: r.binary(e).ge(r.binary(f))");
            Object obtained = runOrCatch(r.binary(e).ge(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #227");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #227:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #229
            /* false */
            Boolean expected_ = false;
            /* r.binary(e).gt(r.binary(f)) */
            logger.info("About to run line #229: r.binary(e).gt(r.binary(f))");
            Object obtained = runOrCatch(r.binary(e).gt(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #229");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #229:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #231
            /* false */
            Boolean expected_ = false;
            /* r.binary(e).eq(r.binary(f)) */
            logger.info("About to run line #231: r.binary(e).eq(r.binary(f))");
            Object obtained = runOrCatch(r.binary(e).eq(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #231");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #231:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #235
            /* true */
            Boolean expected_ = true;
            /* r.binary(f).eq(r.binary(f)) */
            logger.info("About to run line #235: r.binary(f).eq(r.binary(f))");
            Object obtained = runOrCatch(r.binary(f).eq(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #235");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #235:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #237
            /* true */
            Boolean expected_ = true;
            /* r.binary(f).le(r.binary(f)) */
            logger.info("About to run line #237: r.binary(f).le(r.binary(f))");
            Object obtained = runOrCatch(r.binary(f).le(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #237");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #237:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #239
            /* true */
            Boolean expected_ = true;
            /* r.binary(f).ge(r.binary(f)) */
            logger.info("About to run line #239: r.binary(f).ge(r.binary(f))");
            Object obtained = runOrCatch(r.binary(f).ge(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #239");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #239:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #241
            /* false */
            Boolean expected_ = false;
            /* r.binary(f).ne(r.binary(f)) */
            logger.info("About to run line #241: r.binary(f).ne(r.binary(f))");
            Object obtained = runOrCatch(r.binary(f).ne(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #241");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #241:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #243
            /* false */
            Boolean expected_ = false;
            /* r.binary(f).lt(r.binary(f)) */
            logger.info("About to run line #243: r.binary(f).lt(r.binary(f))");
            Object obtained = runOrCatch(r.binary(f).lt(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #243");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #243:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #245
            /* false */
            Boolean expected_ = false;
            /* r.binary(f).gt(r.binary(f)) */
            logger.info("About to run line #245: r.binary(f).gt(r.binary(f))");
            Object obtained = runOrCatch(r.binary(f).gt(r.binary(f)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #245");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #245:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #250
            /* u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.encode('utf-8') */
            byte[] expected_ = "イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム".getBytes(StandardCharsets.UTF_8);
            /* r.binary(u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.encode('utf-8')) */
            logger.info("About to run line #250: r.binary('イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.getBytes(StandardCharsets.UTF_8))");
            Object obtained = runOrCatch(r.binary("イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム".getBytes(StandardCharsets.UTF_8)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #250");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #250:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #256
            /* u'ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ'.encode('utf-16') */
            byte[] expected_ = "ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ".getBytes(StandardCharsets.UTF_16);
            /* r.binary(u'ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ'.encode('utf-16')) */
            logger.info("About to run line #256: r.binary('ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ'.getBytes(StandardCharsets.UTF_16))");
            Object obtained = runOrCatch(r.binary("ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ".getBytes(StandardCharsets.UTF_16)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #256");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #256:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #262
            /* u'lorem ipsum'.encode('ascii') */
            byte[] expected_ = "lorem ipsum".getBytes(StandardCharsets.US_ASCII);
            /* r.binary(u'lorem ipsum'.encode('ascii')) */
            logger.info("About to run line #262: r.binary('lorem ipsum'.getBytes(StandardCharsets.US_ASCII))");
            Object obtained = runOrCatch(r.binary("lorem ipsum".getBytes(StandardCharsets.US_ASCII)),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #262");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #262:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #269
            /* 'foo' */
            String expected_ = "foo";
            /* r.binary(b'foo').coerce_to('string') */
            logger.info("About to run line #269: r.binary(new byte[]{102, 111, 111}).coerceTo('string')");
            Object obtained = runOrCatch(r.binary(new byte[]{102, 111, 111}).coerceTo("string"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #269");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #269:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #272
            /* u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム' */
            String expected_ = "イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム";
            /* r.binary(u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.encode('utf-8')).coerce_to('string') */
            logger.info("About to run line #272: r.binary('イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.getBytes(StandardCharsets.UTF_8)).coerceTo('string')");
            Object obtained = runOrCatch(r.binary("イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム".getBytes(StandardCharsets.UTF_8)).coerceTo("string"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #272");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #272:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #278
            /* u'lorem ipsum' */
            String expected_ = "lorem ipsum";
            /* r.binary(u'lorem ipsum'.encode('ascii')).coerce_to('string') */
            logger.info("About to run line #278: r.binary('lorem ipsum'.getBytes(StandardCharsets.US_ASCII)).coerceTo('string')");
            Object obtained = runOrCatch(r.binary("lorem ipsum".getBytes(StandardCharsets.US_ASCII)).coerceTo("string"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #278");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #278:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #284
            /* b'foo' */
            byte[] expected_ = new byte[]{102, 111, 111};
            /* r.expr('foo').coerce_to('binary') */
            logger.info("About to run line #284: r.expr('foo').coerceTo('binary')");
            Object obtained = runOrCatch(r.expr("foo").coerceTo("binary"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #284");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #284:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #287
            /* True */
            Boolean expected_ = true;
            /* r.binary(a).coerce_to('bool') */
            logger.info("About to run line #287: r.binary(a).coerceTo('bool')");
            Object obtained = runOrCatch(r.binary(a).coerceTo("bool"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #287");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #287:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #290
            /* b'foo' */
            byte[] expected_ = new byte[]{102, 111, 111};
            /* r.binary(b'foo').coerce_to('binary') */
            logger.info("About to run line #290: r.binary(new byte[]{102, 111, 111}).coerceTo('binary')");
            Object obtained = runOrCatch(r.binary(new byte[]{102, 111, 111}).coerceTo("binary"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #290");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #290:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #294
            /* b'ef' */
            byte[] expected_ = new byte[]{101, 102};
            /* r.binary(b'abcdefg').slice(-3,-1) */
            logger.info("About to run line #294: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-3L, -1L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-3L, -1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #294");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #294:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #296
            /* b'ab' */
            byte[] expected_ = new byte[]{97, 98};
            /* r.binary(b'abcdefg').slice(0, 2) */
            logger.info("About to run line #296: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(0L, 2L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(0L, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #296");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #296:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #298
            /* b'def' */
            byte[] expected_ = new byte[]{100, 101, 102};
            /* r.binary(b'abcdefg').slice(3, -1) */
            logger.info("About to run line #298: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(3L, -1L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(3L, -1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #298");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #298:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #300
            /* b'cde' */
            byte[] expected_ = new byte[]{99, 100, 101};
            /* r.binary(b'abcdefg').slice(-5, 5) */
            logger.info("About to run line #300: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-5L, 5L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-5L, 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #300");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #300:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #302
            /* b'ab' */
            byte[] expected_ = new byte[]{97, 98};
            /* r.binary(b'abcdefg').slice(-8, 2) */
            logger.info("About to run line #302: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-8L, 2L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-8L, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #302");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #302:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #304
            /* b'fg' */
            byte[] expected_ = new byte[]{102, 103};
            /* r.binary(b'abcdefg').slice(5, 7) */
            logger.info("About to run line #304: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(5L, 7L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(5L, 7L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #304");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #304:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #308
            /* b'ab' */
            byte[] expected_ = new byte[]{97, 98};
            /* r.binary(b'abcdefg').slice(-9, 2) */
            logger.info("About to run line #308: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-9L, 2L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(-9L, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #308");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #308:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #312
            /* b'fg' */
            byte[] expected_ = new byte[]{102, 103};
            /* r.binary(b'abcdefg').slice(5, 9) */
            logger.info("About to run line #312: r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(5L, 9L)");
            Object obtained = runOrCatch(r.binary(new byte[]{97, 98, 99, 100, 101, 102, 103}).slice(5L, 9L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #312");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #312:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #316
            /* b */
            byte[] expected_ = b;
            /* r.binary(b) */
            logger.info("About to run line #316: r.binary(b)");
            Object obtained = runOrCatch(r.binary(b),
                                          new OptArgs()
                                          .with("binary_format", "native")
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #316");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #316:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #320
            /* {'$reql_type$':'BINARY','data':'AAE='} */
            Map expected_ = r.hashMap("$reql_type$", "BINARY").with("data", "AAE=");
            /* r.binary(b) */
            logger.info("About to run line #320: r.binary(b)");
            Object obtained = runOrCatch(r.binary(b),
                                          new OptArgs()
                                          .with("binary_format", "raw")
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #320");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #320:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #326
            /* b"data" */
            byte[] expected_ = new byte[]{100, 97, 116, 97};
            /* r.binary(r.expr("data")) */
            logger.info("About to run line #326: r.binary(r.expr('data'))");
            Object obtained = runOrCatch(r.binary(r.expr("data")),
                                          new OptArgs()
                                          ,conn);
            try {
                assertArrayEquals(expected_, (byte[]) obtained);
            logger.info("Finished running line #326");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #326:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #332
            /* err('ReqlQueryLogicError', 'Expected type STRING but found OBJECT.', []) */
            Err expected_ = err("ReqlQueryLogicError", "Expected type STRING but found OBJECT.", r.array());
            /* r.binary(r.expr({})) */
            logger.info("About to run line #332: r.binary(r.expr(r.hashMap()))");
            Object obtained = runOrCatch(r.binary(r.expr(r.hashMap())),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #332");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #332:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #335
            /* err('ReqlQueryLogicError', 'Expected type STRING but found ARRAY.', []) */
            Err expected_ = err("ReqlQueryLogicError", "Expected type STRING but found ARRAY.", r.array());
            /* r.binary(r.expr([])) */
            logger.info("About to run line #335: r.binary(r.expr(r.array()))");
            Object obtained = runOrCatch(r.binary(r.expr(r.array())),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #335");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #335:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #341
            /* err('ReqlQueryLogicError','Invalid binary pseudotype:'+' lacking `data` key.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Invalid binary pseudotype:" + " lacking `data` key.", r.array());
            /* r.expr({'$reql_type$':'BINARY'}) */
            logger.info("About to run line #341: r.expr(r.hashMap('$reql_type$', 'BINARY'))");
            Object obtained = runOrCatch(r.expr(r.hashMap("$reql_type$", "BINARY")),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #341");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #341:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #346
            /* err('ReqlQueryLogicError','Invalid base64 format, data found after padding character \'=\'.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Invalid base64 format, data found after padding character '='.", r.array());
            /* r.expr({'$reql_type$':'BINARY','data':'ABCDEFGH==AA'}) */
            logger.info("About to run line #346: r.expr(r.hashMap('$reql_type$', 'BINARY').with('data', 'ABCDEFGH==AA'))");
            Object obtained = runOrCatch(r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "ABCDEFGH==AA")),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #346");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #346:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #348
            /* err('ReqlQueryLogicError','Invalid base64 format, data found after padding character \'=\'.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Invalid base64 format, data found after padding character '='.", r.array());
            /* r.expr({'$reql_type$':'BINARY','data':'ABCDEF==$'}) */
            logger.info("About to run line #348: r.expr(r.hashMap('$reql_type$', 'BINARY').with('data', 'ABCDEF==$'))");
            Object obtained = runOrCatch(r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "ABCDEF==$")),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #348");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #348:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #350
            /* err('ReqlQueryLogicError','Invalid base64 character found:'+' \'^\'.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Invalid base64 character found:" + " '^'.", r.array());
            /* r.expr({'$reql_type$':'BINARY','data':'A^CDEFGH'}) */
            logger.info("About to run line #350: r.expr(r.hashMap('$reql_type$', 'BINARY').with('data', 'A^CDEFGH'))");
            Object obtained = runOrCatch(r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "A^CDEFGH")),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #350");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #350:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #352
            /* err('ReqlQueryLogicError','Invalid base64 length:'+' 1 character remaining, cannot decode a full byte.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Invalid base64 length:" + " 1 character remaining, cannot decode a full byte.", r.array());
            /* r.expr({'$reql_type$':'BINARY','data':'ABCDE'}) */
            logger.info("About to run line #352: r.expr(r.hashMap('$reql_type$', 'BINARY').with('data', 'ABCDE'))");
            Object obtained = runOrCatch(r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "ABCDE")),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #352");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #352:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #356
            /* err('ReqlQueryLogicError','Cannot coerce BINARY to ARRAY.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Cannot coerce BINARY to ARRAY.", r.array());
            /* r.binary(a).coerce_to('array') */
            logger.info("About to run line #356: r.binary(a).coerceTo('array')");
            Object obtained = runOrCatch(r.binary(a).coerceTo("array"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #356");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #356:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #358
            /* err('ReqlQueryLogicError','Cannot coerce BINARY to OBJECT.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Cannot coerce BINARY to OBJECT.", r.array());
            /* r.binary(a).coerce_to('object') */
            logger.info("About to run line #358: r.binary(a).coerceTo('object')");
            Object obtained = runOrCatch(r.binary(a).coerceTo("object"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #358");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #358:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #360
            /* err('ReqlQueryLogicError','Cannot coerce BINARY to NUMBER.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Cannot coerce BINARY to NUMBER.", r.array());
            /* r.binary(a).coerce_to('number') */
            logger.info("About to run line #360: r.binary(a).coerceTo('number')");
            Object obtained = runOrCatch(r.binary(a).coerceTo("number"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #360");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #360:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/binary.yaml line #362
            /* err('ReqlQueryLogicError','Cannot coerce BINARY to NULL.',[]) */
            Err expected_ = err("ReqlQueryLogicError", "Cannot coerce BINARY to NULL.", r.array());
            /* r.binary(a).coerce_to('nu'+'ll') */
            logger.info("About to run line #362: r.binary(a).coerceTo(r.add('nu', 'll'))");
            Object obtained = runOrCatch(r.binary(a).coerceTo(r.add("nu", "ll")),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #362");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #362:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }
    }
}
