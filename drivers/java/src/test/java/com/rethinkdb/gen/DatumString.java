// Autogenerated by convert_tests.py and process_polyglot.py.
// Do not edit this file directly.
// The template for this file is located at:
// ../../../../../../../templates/Test.java
package com.rethinkdb.gen;

import com.rethinkdb.RethinkDB;
import com.rethinkdb.gen.exc.*;
import com.rethinkdb.gen.ast.*;
import com.rethinkdb.ast.ReqlAst;
import com.rethinkdb.model.MapObject;
import com.rethinkdb.model.OptArgs;
import com.rethinkdb.net.Connection;
import com.rethinkdb.net.Cursor;
import junit.framework.TestCase;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertArrayEquals;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.junit.*;
import org.junit.rules.ExpectedException;

import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import java.time.Instant;
import java.util.stream.LongStream;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.concurrent.TimeoutException;
import java.util.regex.Pattern;
import java.util.Collections;
import java.nio.charset.StandardCharsets;

import static com.rethinkdb.TestingCommon.*;
import com.rethinkdb.TestingFramework;

public class DatumString {
    // Tests of converstion to and from the RQL string type
    Logger logger = LoggerFactory.getLogger(DatumString.class);
    public static final RethinkDB r = RethinkDB.r;

    Connection conn;

    @Before
    public void setUp() throws Exception {
        logger.info("Setting up.");
        conn = TestingFramework.createConnection();
        try {
            r.dbCreate("test").run(conn);
            r.db("test").wait_().run(conn);
        }catch (Exception e){}
    }

    @After
    public void tearDown() throws Exception {
        logger.info("Tearing down.");
        r.db("rethinkdb").table("_debug_scratch").delete().run(conn);
        if(!conn.isOpen()){
            conn.close();
            conn = TestingFramework.createConnection();
        }
        r.dbDrop("test").run(conn);
        conn.close(false);
    }

    // Matches Python's str() function, which we use.
    // TODO: We might want to handle this in a visit_Call in convert_tests.py instead.
    private static String str(long i) {
        return String.valueOf(i);
    }

    // A hack to concatenate two List<Long>s -- see is_array_add in convert_tests.py.
    private static List<Long> concatLong(List<Long> x, List<Long> y) {
        List<Long> ret = new ArrayList<Long>(x);
        ret.addAll(y);
        return ret;
    }

    // Autogenerated tests below

    @Test(timeout=120000)
    public void test() throws Exception {

        // datum/string.yaml line #7
        // japanese_hello = u'こんにちは'
        logger.info("Possibly executing: String japanese_hello = (String) ('こんにちは');");
        String japanese_hello = (String) ("こんにちは");

        {
            // datum/string.yaml line #16
            /* "str" */
            String expected_ = "str";
            /* r.expr('str') */
            logger.info("About to run line #16: r.expr('str')");
            Object obtained = runOrCatch(r.expr("str"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #16");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #16:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #21
            /* "str" */
            String expected_ = "str";
            /* r.expr("str") */
            logger.info("About to run line #21: r.expr('str')");
            Object obtained = runOrCatch(r.expr("str"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #21");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #21:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #28
            /* 'str' */
            String expected_ = "str";
            /* r.expr(u'str') */
            logger.info("About to run line #28: r.expr('str')");
            Object obtained = runOrCatch(r.expr("str"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #28");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #28:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #35
            /* u'こんにちは' */
            String expected_ = "こんにちは";
            /* r.expr(japanese_hello) */
            logger.info("About to run line #35: r.expr(japanese_hello)");
            Object obtained = runOrCatch(r.expr(japanese_hello),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #35");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #35:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #43
            /* 'STRING' */
            String expected_ = "STRING";
            /* r.expr('foo').type_of() */
            logger.info("About to run line #43: r.expr('foo').typeOf()");
            Object obtained = runOrCatch(r.expr("foo").typeOf(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #43");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #43:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #47
            /* 'foo' */
            String expected_ = "foo";
            /* r.expr('foo').coerce_to('string') */
            logger.info("About to run line #47: r.expr('foo').coerceTo('string')");
            Object obtained = runOrCatch(r.expr("foo").coerceTo("string"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #47");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #47:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #49
            /* -1.2 */
            Double expected_ = -1.2;
            /* r.expr('-1.2').coerce_to('NUMBER') */
            logger.info("About to run line #49: r.expr('-1.2').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("-1.2").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals((double) expected_,
                             ((Number) obtained).doubleValue(),
                             0.00000000001);
            logger.info("Finished running line #49");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #49:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #51
            /* err("ReqlQueryLogicError", "Could not coerce `--1.2` to NUMBER.", []) */
            Err expected_ = err("ReqlQueryLogicError", "Could not coerce `--1.2` to NUMBER.", r.array());
            /* r.expr('--1.2').coerce_to('NUMBER') */
            logger.info("About to run line #51: r.expr('--1.2').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("--1.2").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #51");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #51:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #53
            /* err("ReqlQueryLogicError", "Could not coerce `-1.2-` to NUMBER.", []) */
            Err expected_ = err("ReqlQueryLogicError", "Could not coerce `-1.2-` to NUMBER.", r.array());
            /* r.expr('-1.2-').coerce_to('NUMBER') */
            logger.info("About to run line #53: r.expr('-1.2-').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("-1.2-").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #53");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #53:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #55
            /* 10 */
            Long expected_ = 10L;
            /* r.expr('0xa').coerce_to('NUMBER') */
            logger.info("About to run line #55: r.expr('0xa').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("0xa").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #55");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #55:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #57
            /* err("ReqlQueryLogicError", "Non-finite number: inf", []) */
            Err expected_ = err("ReqlQueryLogicError", "Non-finite number: inf", r.array());
            /* r.expr('inf').coerce_to('NUMBER') */
            logger.info("About to run line #57: r.expr('inf').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("inf").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #57");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #57:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #61
            /* 13 */
            Long expected_ = 13L;
            /* r.expr('hello, world!').count() */
            logger.info("About to run line #61: r.expr('hello, world!').count()");
            Object obtained = runOrCatch(r.expr("hello, world!").count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #61");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #61:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #63
            /* 5 */
            Long expected_ = 5L;
            /* r.expr(japanese_hello).count() */
            logger.info("About to run line #63: r.expr(japanese_hello).count()");
            Object obtained = runOrCatch(r.expr(japanese_hello).count(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #63");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #63:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #67
            /* 'ello' */
            String expected_ = "ello";
            /* r.expr('hello').slice(1) */
            logger.info("About to run line #67: r.expr('hello').slice(1L)");
            Object obtained = runOrCatch(r.expr("hello").slice(1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #67");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #67:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #69
            /* 'o' */
            String expected_ = "o";
            /* r.expr('hello').slice(-1) */
            logger.info("About to run line #69: r.expr('hello').slice(-1L)");
            Object obtained = runOrCatch(r.expr("hello").slice(-1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #69");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #69:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #71
            /* 'el' */
            String expected_ = "el";
            /* r.expr('hello').slice(-4,3) */
            logger.info("About to run line #71: r.expr('hello').slice(-4L, 3L)");
            Object obtained = runOrCatch(r.expr("hello").slice(-4L, 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #71");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #71:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #73
            /* 'hello' */
            String expected_ = "hello";
            /* r.expr('hello').slice(-99) */
            logger.info("About to run line #73: r.expr('hello').slice(-99L)");
            Object obtained = runOrCatch(r.expr("hello").slice(-99L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #73");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #73:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #75
            /* 'hello' */
            String expected_ = "hello";
            /* r.expr('hello').slice(0) */
            logger.info("About to run line #75: r.expr('hello').slice(0L)");
            Object obtained = runOrCatch(r.expr("hello").slice(0L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #75");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #75:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #77
            /* u'んにちは' */
            String expected_ = "んにちは";
            /* r.expr(japanese_hello).slice(1) */
            logger.info("About to run line #77: r.expr(japanese_hello).slice(1L)");
            Object obtained = runOrCatch(r.expr(japanese_hello).slice(1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #77");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #77:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #84
            /* u'ん' */
            String expected_ = "ん";
            /* r.expr(japanese_hello).slice(1,2) */
            logger.info("About to run line #84: r.expr(japanese_hello).slice(1L, 2L)");
            Object obtained = runOrCatch(r.expr(japanese_hello).slice(1L, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #84");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #84:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #91
            /* u'にちは' */
            String expected_ = "にちは";
            /* r.expr(japanese_hello).slice(-3) */
            logger.info("About to run line #91: r.expr(japanese_hello).slice(-3L)");
            Object obtained = runOrCatch(r.expr(japanese_hello).slice(-3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #91");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #91:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #100
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split() */
            logger.info("About to run line #100: r.expr('').split()");
            Object obtained = runOrCatch(r.expr("").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #100");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #100:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #102
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split(null) */
            logger.info("About to run line #102: r.expr('').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #102");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #102:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #104
            /* [''] */
            List expected_ = r.array("");
            /* r.expr('').split(' ') */
            logger.info("About to run line #104: r.expr('').split(' ')");
            Object obtained = runOrCatch(r.expr("").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #104");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #104:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #106
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split('') */
            logger.info("About to run line #106: r.expr('').split('')");
            Object obtained = runOrCatch(r.expr("").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #106");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #106:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #108
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split(null, 5) */
            logger.info("About to run line #108: r.expr('').split((ReqlExpr) null, 5L)");
            Object obtained = runOrCatch(r.expr("").split((ReqlExpr) null, 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #108");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #108:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #110
            /* [''] */
            List expected_ = r.array("");
            /* r.expr('').split(' ', 5) */
            logger.info("About to run line #110: r.expr('').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #110");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #110:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #112
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split('', 5) */
            logger.info("About to run line #112: r.expr('').split('', 5L)");
            Object obtained = runOrCatch(r.expr("").split("", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #112");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #112:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #115
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('aaaa bbbb  cccc ').split() */
            logger.info("About to run line #115: r.expr('aaaa bbbb  cccc ').split()");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #115");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #115:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #117
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('aaaa bbbb  cccc ').split(null) */
            logger.info("About to run line #117: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #117");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #117:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #119
            /* ['aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("aaaa", "bbbb", "", "cccc", "");
            /* r.expr('aaaa bbbb  cccc ').split(' ') */
            logger.info("About to run line #119: r.expr('aaaa bbbb  cccc ').split(' ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #119");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #119:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #121
            /* ['a', 'a', 'a', 'a', ' ', 'b', 'b', 'b', 'b', ' ', ' ', 'c', 'c', 'c', 'c', ' '] */
            List expected_ = r.array("a", "a", "a", "a", " ", "b", "b", "b", "b", " ", " ", "c", "c", "c", "c", " ");
            /* r.expr('aaaa bbbb  cccc ').split('') */
            logger.info("About to run line #121: r.expr('aaaa bbbb  cccc ').split('')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #121");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #121:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #123
            /* ['aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b') */
            logger.info("About to run line #123: r.expr('aaaa bbbb  cccc ').split('b')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #123");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #123:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #125
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb') */
            logger.info("About to run line #125: r.expr('aaaa bbbb  cccc ').split('bb')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #125");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #125:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #127
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ') */
            logger.info("About to run line #127: r.expr('aaaa bbbb  cccc ').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #127");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #127:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #129
            /* ['aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb') */
            logger.info("About to run line #129: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #129");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #129:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #131
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ') */
            logger.info("About to run line #131: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #131");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #131:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #133
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ') */
            logger.info("About to run line #133: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #133");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #133:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #136
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('aaaa bbbb  cccc ').split(null, 3) */
            logger.info("About to run line #136: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null, 3L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null, 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #136");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #136:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #138
            /* ['aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("aaaa", "bbbb", "", "cccc", "");
            /* r.expr('aaaa bbbb  cccc ').split(' ', 5) */
            logger.info("About to run line #138: r.expr('aaaa bbbb  cccc ').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #138");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #138:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #140
            /* ['a', 'a', 'a', 'a', ' ', 'bbbb  cccc '] */
            List expected_ = r.array("a", "a", "a", "a", " ", "bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('', 5) */
            logger.info("About to run line #140: r.expr('aaaa bbbb  cccc ').split('', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #140");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #140:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #142
            /* ['aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b', 5) */
            logger.info("About to run line #142: r.expr('aaaa bbbb  cccc ').split('b', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #142");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #142:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #144
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb', 3) */
            logger.info("About to run line #144: r.expr('aaaa bbbb  cccc ').split('bb', 3L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #144");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #144:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #146
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #146: r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #146");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #146:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #148
            /* ['aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6) */
            logger.info("About to run line #148: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb", 6L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #148");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #148:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #150
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #150: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #150");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #150:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #152
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3) */
            logger.info("About to run line #152: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #152");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #152:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #155
            /* ['aaaa', 'bbbb', 'cccc '] */
            List expected_ = r.array("aaaa", "bbbb", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(null, 2) */
            logger.info("About to run line #155: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #155");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #155:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #157
            /* ["a", "b"] */
            List expected_ = r.array("a", "b");
            /* r.expr("a  b  ").split(null, 2) */
            logger.info("About to run line #157: r.expr('a  b  ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("a  b  ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #157");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #157:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #159
            /* ['aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("aaaa", "bbbb", "", "cccc", "");
            /* r.expr('aaaa bbbb  cccc ').split(' ', 4) */
            logger.info("About to run line #159: r.expr('aaaa bbbb  cccc ').split(' ', 4L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" ", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #159");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #159:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #161
            /* ['a', 'a', 'a', 'a', ' bbbb  cccc '] */
            List expected_ = r.array("a", "a", "a", "a", " bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('', 4) */
            logger.info("About to run line #161: r.expr('aaaa bbbb  cccc ').split('', 4L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #161");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #161:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #163
            /* ['aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b', 4) */
            logger.info("About to run line #163: r.expr('aaaa bbbb  cccc ').split('b', 4L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #163");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #163:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #165
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #165: r.expr('aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #165");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #165:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #167
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 1) */
            logger.info("About to run line #167: r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #167");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #167:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #169
            /* ['aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5) */
            logger.info("About to run line #169: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #169");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #169:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #171
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1) */
            logger.info("About to run line #171: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #171");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #171:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #173
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #173: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #173");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #173:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #176
            /* ['aaaa', 'bbbb  cccc '] */
            List expected_ = r.array("aaaa", "bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(null, 1) */
            logger.info("About to run line #176: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null, 1L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null, 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #176");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #176:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #178
            /* ['aaaa', 'bbbb', ' cccc '] */
            List expected_ = r.array("aaaa", "bbbb", " cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' ', 2) */
            logger.info("About to run line #178: r.expr('aaaa bbbb  cccc ').split(' ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #178");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #178:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #180
            /* ['a', 'a', 'aa bbbb  cccc '] */
            List expected_ = r.array("a", "a", "aa bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('', 2) */
            logger.info("About to run line #180: r.expr('aaaa bbbb  cccc ').split('', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #180");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #180:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #182
            /* ['aaaa ', '', 'bb  cccc '] */
            List expected_ = r.array("aaaa ", "", "bb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b', 2) */
            logger.info("About to run line #182: r.expr('aaaa bbbb  cccc ').split('b', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #182");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #182:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #184
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #184: r.expr('aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #184");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #184:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #186
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #186: r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #186");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #186:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #188
            /* ['aaaa ', '', '  cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2) */
            logger.info("About to run line #188: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #188");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #188:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #190
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #190: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #190");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #190:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #192
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #192: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #192");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #192:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #195
            /* [] */
            List expected_ = r.array();
            /* r.expr('  ').split() */
            logger.info("About to run line #195: r.expr('  ').split()");
            Object obtained = runOrCatch(r.expr("  ").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #195");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #195:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #197
            /* [] */
            List expected_ = r.array();
            /* r.expr('  ').split(null) */
            logger.info("About to run line #197: r.expr('  ').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("  ").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #197");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #197:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #199
            /* ['', '', ''] */
            List expected_ = r.array("", "", "");
            /* r.expr('  ').split(' ') */
            logger.info("About to run line #199: r.expr('  ').split(' ')");
            Object obtained = runOrCatch(r.expr("  ").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #199");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #199:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #201
            /* [] */
            List expected_ = r.array();
            /* r.expr('  ').split(null, 5) */
            logger.info("About to run line #201: r.expr('  ').split((ReqlExpr) null, 5L)");
            Object obtained = runOrCatch(r.expr("  ").split((ReqlExpr) null, 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #201");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #201:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #203
            /* ['', '', ''] */
            List expected_ = r.array("", "", "");
            /* r.expr('  ').split(' ', 5) */
            logger.info("About to run line #203: r.expr('  ').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("  ").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #203");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #203:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #206
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('  aaaa bbbb  cccc ').split() */
            logger.info("About to run line #206: r.expr('  aaaa bbbb  cccc ').split()");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #206");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #206:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #208
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('  aaaa bbbb  cccc ').split(null) */
            logger.info("About to run line #208: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #208");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #208:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #210
            /* ['', '', 'aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("", "", "aaaa", "bbbb", "", "cccc", "");
            /* r.expr('  aaaa bbbb  cccc ').split(' ') */
            logger.info("About to run line #210: r.expr('  aaaa bbbb  cccc ').split(' ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #210");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #210:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #212
            /* ['  aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b') */
            logger.info("About to run line #212: r.expr('  aaaa bbbb  cccc ').split('b')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #212");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #212:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #214
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb') */
            logger.info("About to run line #214: r.expr('  aaaa bbbb  cccc ').split('bb')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #214");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #214:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #216
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ') */
            logger.info("About to run line #216: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #216");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #216:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #218
            /* ['  aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb') */
            logger.info("About to run line #218: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #218");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #218:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #220
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ') */
            logger.info("About to run line #220: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #220");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #220:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #222
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ') */
            logger.info("About to run line #222: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #222");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #222:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #225
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('  aaaa bbbb  cccc ').split(null, 3) */
            logger.info("About to run line #225: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null, 3L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null, 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #225");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #225:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #227
            /* ['', '', 'aaaa', 'bbbb', '', 'cccc '] */
            List expected_ = r.array("", "", "aaaa", "bbbb", "", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' ', 5) */
            logger.info("About to run line #227: r.expr('  aaaa bbbb  cccc ').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #227");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #227:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #229
            /* ['  aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b', 5) */
            logger.info("About to run line #229: r.expr('  aaaa bbbb  cccc ').split('b', 5L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #229");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #229:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #231
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb', 3) */
            logger.info("About to run line #231: r.expr('  aaaa bbbb  cccc ').split('bb', 3L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #231");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #231:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #233
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #233: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #233");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #233:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #235
            /* ['  aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6) */
            logger.info("About to run line #235: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb", 6L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #235");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #235:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #237
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #237: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #237");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #237:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #239
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3) */
            logger.info("About to run line #239: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #239");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #239:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #242
            /* ['aaaa', 'bbbb', 'cccc '] */
            List expected_ = r.array("aaaa", "bbbb", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(null, 2) */
            logger.info("About to run line #242: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #242");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #242:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #244
            /* ["a", "b"] */
            List expected_ = r.array("a", "b");
            /* r.expr("a  b  ").split(null, 2) */
            logger.info("About to run line #244: r.expr('a  b  ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("a  b  ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #244");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #244:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #246
            /* ['', '', 'aaaa', 'bbbb', ' cccc '] */
            List expected_ = r.array("", "", "aaaa", "bbbb", " cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' ', 4) */
            logger.info("About to run line #246: r.expr('  aaaa bbbb  cccc ').split(' ', 4L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" ", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #246");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #246:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #248
            /* ['  aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b', 4) */
            logger.info("About to run line #248: r.expr('  aaaa bbbb  cccc ').split('b', 4L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #248");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #248:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #250
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #250: r.expr('  aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #250");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #250:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #252
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 1) */
            logger.info("About to run line #252: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #252");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #252:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #254
            /* ['  aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5) */
            logger.info("About to run line #254: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #254");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #254:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #256
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1) */
            logger.info("About to run line #256: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #256");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #256:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #258
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #258: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #258");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #258:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #261
            /* ['aaaa', 'bbbb  cccc '] */
            List expected_ = r.array("aaaa", "bbbb  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(null, 1) */
            logger.info("About to run line #261: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null, 1L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null, 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #261");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #261:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #263
            /* ['', '', 'aaaa bbbb  cccc '] */
            List expected_ = r.array("", "", "aaaa bbbb  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' ', 2) */
            logger.info("About to run line #263: r.expr('  aaaa bbbb  cccc ').split(' ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #263");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #263:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #265
            /* ['  aaaa ', '', 'bb  cccc '] */
            List expected_ = r.array("  aaaa ", "", "bb  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b', 2) */
            logger.info("About to run line #265: r.expr('  aaaa bbbb  cccc ').split('b', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #265");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #265:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #267
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #267: r.expr('  aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #267");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #267:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #269
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #269: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #269");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #269:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #271
            /* ['  aaaa ', '', '  cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2) */
            logger.info("About to run line #271: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #271");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #271:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #273
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #273: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #273");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #273:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #275
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #275: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #275");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #275:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #278
            /* "ABC-DEF-GHJ" */
            String expected_ = "ABC-DEF-GHJ";
            /* r.expr("abc-dEf-GHJ").upcase() */
            logger.info("About to run line #278: r.expr('abc-dEf-GHJ').upcase()");
            Object obtained = runOrCatch(r.expr("abc-dEf-GHJ").upcase(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #278");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #278:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #280
            /* "abc-def-ghj" */
            String expected_ = "abc-def-ghj";
            /* r.expr("abc-dEf-GHJ").downcase() */
            logger.info("About to run line #280: r.expr('abc-dEf-GHJ').downcase()");
            Object obtained = runOrCatch(r.expr("abc-dEf-GHJ").downcase(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #280");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #280:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #285
            /* ["f", "\u00e9", "o", "o"] */
            List expected_ = r.array("f", "é", "o", "o");
            /* r.expr(u"f\u00e9oo").split("") */
            logger.info("About to run line #285: r.expr('féoo').split('')");
            Object obtained = runOrCatch(r.expr("féoo").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #285");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #285:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #294
            /* ["f", "e\u0301", "o", "o"] */
            List expected_ = r.array("f", "é", "o", "o");
            /* r.expr(u"fe\u0301oo").split("") */
            logger.info("About to run line #294: r.expr('féoo').split('')");
            Object obtained = runOrCatch(r.expr("féoo").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #294");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #294:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #307
            /* ["foo", "bar", "baz", "quux", "fred", "barney", "wilma"] */
            List expected_ = r.array("foo", "bar", "baz", "quux", "fred", "barney", "wilma");
            /* r.expr(u"foo bar\tbaz\nquux\rfred\u000bbarney\u000cwilma").split() */
            logger.info("About to run line #307: r.expr('foo bar\\tbaz\\nquux\\rfred\\u000bbarney\\u000cwilma').split()");
            Object obtained = runOrCatch(r.expr("foo bar\tbaz\nquux\rfred\u000bbarney\u000cwilma").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #307");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #307:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #323
            /* ["foo", "bar", "baz\u2060quux", "fred", "barney", "wilma", "betty\u200b"] */
            List expected_ = r.array("foo", "bar", "baz\u2060quux", "fred", "barney", "wilma", "betty\u200b");
            /* r.expr(u"foo\u00a0bar\u2001baz\u2060quux\u2028fred\u2028barney\u2029wilma\u0085betty\u200b").split() */
            logger.info("About to run line #323: r.expr('foo\\u00a0bar\\u2001baz\\u2060quux\\u2028fred\\u2028barney\\u2029wilma\\u0085betty\\u200b').split()");
            Object obtained = runOrCatch(r.expr("foo\u00a0bar\u2001baz\u2060quux\u2028fred\u2028barney\u2029wilma\u0085betty\u200b").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #323");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #323:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }
    }
}
