name: "Build"

# NOTE: Although it is deprecated, we use Python 2, because all python scripts
#  are targeting that in the repository. To drop Python 2, we would need to
#  update every script, which is a big effort. Also, this locks us into a
#  given Python driver version (rethinkdb-python < 2.5).

on:
  push:
    branches:
      - main
      - v2.4.x
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: '00 8 * * 1'

jobs:
  # Preflight runs every test and assertion that has no dependency on the build
  # directory.
  preflight:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: cpplint
        uses: ./.github/actions/tests
        with:
          command: | 
            [ ! -d "${TEST_OUTPUT_DIR}" ] && mkdir -p ${TEST_OUTPUT_DIR}
            ./scripts/check_style.sh | tee ${TEST_OUTPUT_DIR}/cpplint.log
          download_artifacts: false


  # Build job runs after the preflight finished successfully. It configures the
  # build system, then builds the DB.
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    needs: preflight
    steps:
      - uses: actions/checkout@v4
      - name: apt install
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update && sudo apt install -y tzdata \
              && sudo ln -fs /usr/share/zoneinfo/UTC /etc/localtime \
              && sudo dpkg-reconfigure --frontend noninteractive tzdata
          sudo apt update && sudo apt install -y \
              libc6 libcurl4 \
              git build-essential protobuf-compiler \
              libprotobuf-dev libcurl4-openssl-dev \
              libncurses5-dev m4 g++ libssl-dev \
              debhelper curl

      - name: configure
        run: ./configure --fetch boost --fetch gtest --fetch re2 --fetch jemalloc --fetch quickjs

      - name: make support
        run: make support -j $(python -c 'import multiprocessing; print(multiprocessing.cpu_count())')

      - name: make DEBUG=1
        run: make DEBUG=1 -j $(python -c 'import multiprocessing; print(multiprocessing.cpu_count())')

      - name: compress build artifacts for upload
        if: always()
        run: tar -czf ${{ github.job }}.tar.gz build

      - name: upload build artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ github.job }}-artifacts
          path: |
            config.mk
            build.tar.gz

  # Execute the test runner for unit tests.
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: unit tests
        uses: ./.github/actions/tests
        with:
          command: |
            export MAX_JOBS=$(python -c 'import multiprocessing; print(multiprocessing.cpu_count())')
            test/run --verbose --jobs "${MAX_JOBS}" -o ${TEST_OUTPUT_DIR} -H unit

  # Execute the test runner for integration tests.
  # NOTE: integration tests are using the Python driver, hence we have to setup the
  #  driver and checkout the exact same commit hash as we do for other tests.
  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: integration tests
        uses: ./.github/actions/driver-tests
        with:
          driver_name: python
          driver_dist_dir: /tmp/python-driver/rethinkdb
          test_command: |
            export PYTHON_DRIVER=/tmp/python-driver/rethinkdb
            export MAX_JOBS=$(python -c 'import multiprocessing; print(multiprocessing.cpu_count())')
            test/run --timeout 300 --jobs "${MAX_JOBS}" -o ${TEST_OUTPUT_DIR} -H all '!unit' '!cpplint' '!long' '!disabled'

  long-running-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: long running tests
        uses: ./.github/actions/driver-tests
        with:
          driver_name: python
          driver_dist_dir: /tmp/python-driver/rethinkdb
          test_command: |
            export PYTHON_DRIVER=/tmp/python-driver/rethinkdb
            export MAX_JOBS=$(python -c 'import multiprocessing; print(multiprocessing.cpu_count())')
            test/run --timeout 900 --jobs "${MAX_JOBS}" -o ${TEST_OUTPUT_DIR} -H long '!disabled'

  # Execute the test runner for polyglot tests.
  # NOTE: We are not running "language group" tests (like `py`, `rb`, or `js`) because
  #  those interpreter versions listed in the groups are way deprecated. Instead, we
  #  are running one test per language as a sanity check. We should run language groups
  #  when we ensured that drivers are supporting never interpreter versions.
  polyglot-tests-python:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - integration-tests
      - long-running-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: polyglot tests for python
        uses: ./.github/actions/driver-tests
        with:
          driver_name: python
          driver_dist_dir: /tmp/python-driver/rethinkdb
          interpreter: py3.12
          test_target: polyglot

  polyglot-tests-javascript:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - integration-tests
      - long-running-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/setup-node@v3
        with:
          node-version: '16.14'

      - name: polyglot tests for javascript
        uses: ./.github/actions/driver-tests
        with:
          driver_name: javascript
          driver_dist_dir: /tmp/driver/dist
          repo_url: https://github.com/rethinkdb/rethinkdb-javascript.git
          # TODO: This commit is pointing after driver extraction, hence it should be the baseline.
          #  When all tests are passing using this commit hash, update the hash to the latest and
          #  fix the newly raised issues.
          commit_hash: c717cb9e2bdab77b55b7a31a5d780ba293c5fadf
          interpreter: js16.14
          test_target: polyglot
          install_command: npm install && npm run build

  polyglot-tests-ruby:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - integration-tests
      - long-running-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: polyglot tests for ruby
        uses: ./.github/actions/driver-tests
        with:
          driver_name: ruby
          driver_dist_dir: /tmp/driver/lib
          repo_url: https://github.com/rethinkdb/rethinkdb-ruby.git
          commit_hash: 25781763f1af4e85116c80fd0cc988927e9c6829
          interpreter: rb2.7
          test_target: polyglot
          install_command: bundle update --bundler && bundle install && rake build
