#!/usr/bin/env python

# test-issue-url: https://github.com/rethinkdb/rethinkdb/issues/2319
# test-description: server responds to ProtoBuffers protocol

import os, subprocess, sys, tempfile, time

thisDir = os.path.abspath(os.path.dirname(__file__))
sys.path.append(os.path.join(thisDir, os.path.pardir, 'common'))
import driver, utils

debugBuild = str(os.path.basename(utils.latest_build_dir())).startswith('debug')

# -- ensure the test is compliled

outputFile = tempfile.NamedTemporaryFile('w+')
command = ['make', 'protobuf-test-output-location']
if debugBuild is True:
    command += ['DEBUG=1']
compileProcess = subprocess.Popen(command, stdout=outputFile, stderr=subprocess.STDOUT, cwd=thisDir)
reportDeadline = time.time() + 2
while compileProcess.poll() == None and reportDeadline > time.time():
	time.sleep(.1)
if compileProcess.poll() is None:
	print('Compiling the test, this make take some time')
if compileProcess.wait() != 0:
	outputFile.seek(0)
	sys.exit('Failed comiling test, got error code %d and output:\n%s\n' % (compileProcess.returncode, outputFile.read()))

# - find the executable path from the output

testExecutable = None

prefixString = 'protobuff-test executable location: '
outputFile.seek(0)
for line in outputFile:
	if line.startswith(prefixString):
		testExecutable = line[len(prefixString):].strip()

if testExecutable is None or not os.access(testExecutable, os.X_OK):
	sys.exit('Unable to find the protobuff-test executable: %s' % str(testExecutable))

# -- start the server

server = driver.Process()

# -- run the test

sys.exit(subprocess.call([testExecutable, '--host', str(server.host), '--port', str(server.driver_port)]))
