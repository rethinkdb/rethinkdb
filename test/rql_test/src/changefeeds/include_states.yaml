desc: Test `include_states`
table_variable_name: tbl
tests:
    - py: tbl.changes(squash=true, include_states=true).limit(1)
      rb: tbl.changes(squash:true, include_states:true).limit(1)
      js: tbl.changes({squash:true, includeStates:true}).limit(1)
      ot: [{'state':'ready'}]

     - py: tbl.get(0).changes(squash=true, include_states=true, include_initial=true).limit(3)
       rb: tbl.get(0).changes(squash:true, include_states:true, include_initial:true).limit(3)
       js: tbl.get(0).changes({squash:true, includeStates:true, includeInitial:true}).limit(3)
       ot: [{'state':'initializing'}, {'new_val':null}, {'state':'ready'}]

     - py: tbl.order_by(index='id').limit(10).changes(squash=true, include_states=true, include_initial=true).limit(2)
       rb: tbl.order_by(index:'id').limit(10).changes(squash:true, include_states:true, include_initial:true).limit(2)
       js: tbl.orderBy({index:'id'}).limit(10).changes({squash:true, includeStates:true, includeInitial:true}).limit(2)
       ot: [{'state':'initializing'}, {'state':'ready'}]

     - cd: tbl.insert({'id':1})

     - py: tbl.order_by(index='id').limit(10).changes(squash=true, include_states=true, include_initial=true).limit(3)
       rb: tbl.order_by(index:'id').limit(10).changes(squash:true, include_states:true, include_initial:true).limit(3)
       js: tbl.orderBy({index:'id'}).limit(10).changes({squash:true, includeStates:true, includeInitial:true}).limit(3)
       ot: [{'state':'initializing'}, {'new_val':{'id':1}}, {'state':'ready'}]

     - py: tblchanges = tbl.changes(squash=true, include_states=true)
       rb: tblchanges = tbl.changes(squash:true, include_states:true)
       js: tblchanges = tbl.changes({squash:true, includeStates:true})

     - cd: tbl.insert({'id':2})

     - cd: fetch(tblchanges, 2)
       ot: [{'state':'ready'},{'new_val':{'id':2},'old_val':null}]

     - py: getchanges = tbl.get(2).changes(include_states=true, include_initial=true)
       rb: getchanges = tbl.get(2).changes(include_states:true, include_initial:true)
       js: getchanges = tbl.get(2).changes({includeStates:true, includeInitial:true})

     - cd: tbl.get(2).update({'a':1})

     - cd: fetch(getchanges, 4)
       ot: [{'state':'initializing'}, {'new_val':{'id':2}}, {'state':'ready'}, {'old_val':{'id':2},'new_val':{'id':2,'a':1}}]

     - py: limitchanges = tbl.order_by(index='id').limit(10).changes(include_states=true, include_initial=true)
       rb: limitchanges = tbl.order_by(index:'id').limit(10).changes(include_states:true, include_initial:true)
       js: limitchanges = tbl.orderBy({index:'id'}).limit(10).changes({includeStates:true, includeInitial:true})

     - py: limitchangesdesc = tbl.order_by(index=r.desc('id')).limit(10).changes(include_states=true, include_initial=true)
       rb: limitchangesdesc = tbl.order_by(index:r.desc('id')).limit(10).changes(include_states:true, include_initial:true)
       js: limitchangesdesc = tbl.orderBy({index:r.desc('id')}).limit(10).changes({includeStates:true, includeInitial:true})

     - cd: tbl.insert({'id':3})

     - cd: fetch(limitchanges, 5)
       ot: [{'state':'initializing'}, {'new_val':{'id':1}}, {'new_val':{'a':1, 'id':2}}, {'state':'ready'}, {'old_val':null, 'new_val':{'id':3}}]

     - cd: fetch(limitchangesdesc, 5)
       ot: [{'state':'initializing'}, {'new_val':{'a':1, 'id':2}}, {'new_val':{'id':1}}, {'state':'ready'}, {'old_val':null, 'new_val':{'id':3}}]
