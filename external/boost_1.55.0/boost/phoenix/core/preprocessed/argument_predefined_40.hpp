/*==============================================================================
    Copyright (c) 2001-2010 Joel de Guzman
    Copyright (c) 2010-2011 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
    
    namespace placeholders
    {
        typedef expression::argument<1>::type arg1_type; typedef expression::argument<2>::type arg2_type; typedef expression::argument<3>::type arg3_type; typedef expression::argument<4>::type arg4_type; typedef expression::argument<5>::type arg5_type; typedef expression::argument<6>::type arg6_type; typedef expression::argument<7>::type arg7_type; typedef expression::argument<8>::type arg8_type; typedef expression::argument<9>::type arg9_type; typedef expression::argument<10>::type arg10_type; typedef expression::argument<11>::type arg11_type; typedef expression::argument<12>::type arg12_type; typedef expression::argument<13>::type arg13_type; typedef expression::argument<14>::type arg14_type; typedef expression::argument<15>::type arg15_type; typedef expression::argument<16>::type arg16_type; typedef expression::argument<17>::type arg17_type; typedef expression::argument<18>::type arg18_type; typedef expression::argument<19>::type arg19_type; typedef expression::argument<20>::type arg20_type; typedef expression::argument<21>::type arg21_type; typedef expression::argument<22>::type arg22_type; typedef expression::argument<23>::type arg23_type; typedef expression::argument<24>::type arg24_type; typedef expression::argument<25>::type arg25_type; typedef expression::argument<26>::type arg26_type; typedef expression::argument<27>::type arg27_type; typedef expression::argument<28>::type arg28_type; typedef expression::argument<29>::type arg29_type; typedef expression::argument<30>::type arg30_type; typedef expression::argument<31>::type arg31_type; typedef expression::argument<32>::type arg32_type; typedef expression::argument<33>::type arg33_type; typedef expression::argument<34>::type arg34_type; typedef expression::argument<35>::type arg35_type; typedef expression::argument<36>::type arg36_type; typedef expression::argument<37>::type arg37_type; typedef expression::argument<38>::type arg38_type; typedef expression::argument<39>::type arg39_type; typedef expression::argument<40>::type arg40_type;
        typedef expression::argument<1>::type _1_type; typedef expression::argument<2>::type _2_type; typedef expression::argument<3>::type _3_type; typedef expression::argument<4>::type _4_type; typedef expression::argument<5>::type _5_type; typedef expression::argument<6>::type _6_type; typedef expression::argument<7>::type _7_type; typedef expression::argument<8>::type _8_type; typedef expression::argument<9>::type _9_type; typedef expression::argument<10>::type _10_type; typedef expression::argument<11>::type _11_type; typedef expression::argument<12>::type _12_type; typedef expression::argument<13>::type _13_type; typedef expression::argument<14>::type _14_type; typedef expression::argument<15>::type _15_type; typedef expression::argument<16>::type _16_type; typedef expression::argument<17>::type _17_type; typedef expression::argument<18>::type _18_type; typedef expression::argument<19>::type _19_type; typedef expression::argument<20>::type _20_type; typedef expression::argument<21>::type _21_type; typedef expression::argument<22>::type _22_type; typedef expression::argument<23>::type _23_type; typedef expression::argument<24>::type _24_type; typedef expression::argument<25>::type _25_type; typedef expression::argument<26>::type _26_type; typedef expression::argument<27>::type _27_type; typedef expression::argument<28>::type _28_type; typedef expression::argument<29>::type _29_type; typedef expression::argument<30>::type _30_type; typedef expression::argument<31>::type _31_type; typedef expression::argument<32>::type _32_type; typedef expression::argument<33>::type _33_type; typedef expression::argument<34>::type _34_type; typedef expression::argument<35>::type _35_type; typedef expression::argument<36>::type _36_type; typedef expression::argument<37>::type _37_type; typedef expression::argument<38>::type _38_type; typedef expression::argument<39>::type _39_type; typedef expression::argument<40>::type _40_type;
        expression::argument<1>::type const arg1 = {{{}}}; expression::argument<2>::type const arg2 = {{{}}}; expression::argument<3>::type const arg3 = {{{}}}; expression::argument<4>::type const arg4 = {{{}}}; expression::argument<5>::type const arg5 = {{{}}}; expression::argument<6>::type const arg6 = {{{}}}; expression::argument<7>::type const arg7 = {{{}}}; expression::argument<8>::type const arg8 = {{{}}}; expression::argument<9>::type const arg9 = {{{}}}; expression::argument<10>::type const arg10 = {{{}}}; expression::argument<11>::type const arg11 = {{{}}}; expression::argument<12>::type const arg12 = {{{}}}; expression::argument<13>::type const arg13 = {{{}}}; expression::argument<14>::type const arg14 = {{{}}}; expression::argument<15>::type const arg15 = {{{}}}; expression::argument<16>::type const arg16 = {{{}}}; expression::argument<17>::type const arg17 = {{{}}}; expression::argument<18>::type const arg18 = {{{}}}; expression::argument<19>::type const arg19 = {{{}}}; expression::argument<20>::type const arg20 = {{{}}}; expression::argument<21>::type const arg21 = {{{}}}; expression::argument<22>::type const arg22 = {{{}}}; expression::argument<23>::type const arg23 = {{{}}}; expression::argument<24>::type const arg24 = {{{}}}; expression::argument<25>::type const arg25 = {{{}}}; expression::argument<26>::type const arg26 = {{{}}}; expression::argument<27>::type const arg27 = {{{}}}; expression::argument<28>::type const arg28 = {{{}}}; expression::argument<29>::type const arg29 = {{{}}}; expression::argument<30>::type const arg30 = {{{}}}; expression::argument<31>::type const arg31 = {{{}}}; expression::argument<32>::type const arg32 = {{{}}}; expression::argument<33>::type const arg33 = {{{}}}; expression::argument<34>::type const arg34 = {{{}}}; expression::argument<35>::type const arg35 = {{{}}}; expression::argument<36>::type const arg36 = {{{}}}; expression::argument<37>::type const arg37 = {{{}}}; expression::argument<38>::type const arg38 = {{{}}}; expression::argument<39>::type const arg39 = {{{}}}; expression::argument<40>::type const arg40 = {{{}}};
        expression::argument<1>::type const _1 = {{{}}}; expression::argument<2>::type const _2 = {{{}}}; expression::argument<3>::type const _3 = {{{}}}; expression::argument<4>::type const _4 = {{{}}}; expression::argument<5>::type const _5 = {{{}}}; expression::argument<6>::type const _6 = {{{}}}; expression::argument<7>::type const _7 = {{{}}}; expression::argument<8>::type const _8 = {{{}}}; expression::argument<9>::type const _9 = {{{}}}; expression::argument<10>::type const _10 = {{{}}}; expression::argument<11>::type const _11 = {{{}}}; expression::argument<12>::type const _12 = {{{}}}; expression::argument<13>::type const _13 = {{{}}}; expression::argument<14>::type const _14 = {{{}}}; expression::argument<15>::type const _15 = {{{}}}; expression::argument<16>::type const _16 = {{{}}}; expression::argument<17>::type const _17 = {{{}}}; expression::argument<18>::type const _18 = {{{}}}; expression::argument<19>::type const _19 = {{{}}}; expression::argument<20>::type const _20 = {{{}}}; expression::argument<21>::type const _21 = {{{}}}; expression::argument<22>::type const _22 = {{{}}}; expression::argument<23>::type const _23 = {{{}}}; expression::argument<24>::type const _24 = {{{}}}; expression::argument<25>::type const _25 = {{{}}}; expression::argument<26>::type const _26 = {{{}}}; expression::argument<27>::type const _27 = {{{}}}; expression::argument<28>::type const _28 = {{{}}}; expression::argument<29>::type const _29 = {{{}}}; expression::argument<30>::type const _30 = {{{}}}; expression::argument<31>::type const _31 = {{{}}}; expression::argument<32>::type const _32 = {{{}}}; expression::argument<33>::type const _33 = {{{}}}; expression::argument<34>::type const _34 = {{{}}}; expression::argument<35>::type const _35 = {{{}}}; expression::argument<36>::type const _36 = {{{}}}; expression::argument<37>::type const _37 = {{{}}}; expression::argument<38>::type const _38 = {{{}}}; expression::argument<39>::type const _39 = {{{}}}; expression::argument<40>::type const _40 = {{{}}};
    }
    namespace arg_names
    {
        typedef expression::argument<1>::type arg1_type; typedef expression::argument<2>::type arg2_type; typedef expression::argument<3>::type arg3_type; typedef expression::argument<4>::type arg4_type; typedef expression::argument<5>::type arg5_type; typedef expression::argument<6>::type arg6_type; typedef expression::argument<7>::type arg7_type; typedef expression::argument<8>::type arg8_type; typedef expression::argument<9>::type arg9_type; typedef expression::argument<10>::type arg10_type; typedef expression::argument<11>::type arg11_type; typedef expression::argument<12>::type arg12_type; typedef expression::argument<13>::type arg13_type; typedef expression::argument<14>::type arg14_type; typedef expression::argument<15>::type arg15_type; typedef expression::argument<16>::type arg16_type; typedef expression::argument<17>::type arg17_type; typedef expression::argument<18>::type arg18_type; typedef expression::argument<19>::type arg19_type; typedef expression::argument<20>::type arg20_type; typedef expression::argument<21>::type arg21_type; typedef expression::argument<22>::type arg22_type; typedef expression::argument<23>::type arg23_type; typedef expression::argument<24>::type arg24_type; typedef expression::argument<25>::type arg25_type; typedef expression::argument<26>::type arg26_type; typedef expression::argument<27>::type arg27_type; typedef expression::argument<28>::type arg28_type; typedef expression::argument<29>::type arg29_type; typedef expression::argument<30>::type arg30_type; typedef expression::argument<31>::type arg31_type; typedef expression::argument<32>::type arg32_type; typedef expression::argument<33>::type arg33_type; typedef expression::argument<34>::type arg34_type; typedef expression::argument<35>::type arg35_type; typedef expression::argument<36>::type arg36_type; typedef expression::argument<37>::type arg37_type; typedef expression::argument<38>::type arg38_type; typedef expression::argument<39>::type arg39_type; typedef expression::argument<40>::type arg40_type;
        typedef expression::argument<1>::type _1_type; typedef expression::argument<2>::type _2_type; typedef expression::argument<3>::type _3_type; typedef expression::argument<4>::type _4_type; typedef expression::argument<5>::type _5_type; typedef expression::argument<6>::type _6_type; typedef expression::argument<7>::type _7_type; typedef expression::argument<8>::type _8_type; typedef expression::argument<9>::type _9_type; typedef expression::argument<10>::type _10_type; typedef expression::argument<11>::type _11_type; typedef expression::argument<12>::type _12_type; typedef expression::argument<13>::type _13_type; typedef expression::argument<14>::type _14_type; typedef expression::argument<15>::type _15_type; typedef expression::argument<16>::type _16_type; typedef expression::argument<17>::type _17_type; typedef expression::argument<18>::type _18_type; typedef expression::argument<19>::type _19_type; typedef expression::argument<20>::type _20_type; typedef expression::argument<21>::type _21_type; typedef expression::argument<22>::type _22_type; typedef expression::argument<23>::type _23_type; typedef expression::argument<24>::type _24_type; typedef expression::argument<25>::type _25_type; typedef expression::argument<26>::type _26_type; typedef expression::argument<27>::type _27_type; typedef expression::argument<28>::type _28_type; typedef expression::argument<29>::type _29_type; typedef expression::argument<30>::type _30_type; typedef expression::argument<31>::type _31_type; typedef expression::argument<32>::type _32_type; typedef expression::argument<33>::type _33_type; typedef expression::argument<34>::type _34_type; typedef expression::argument<35>::type _35_type; typedef expression::argument<36>::type _36_type; typedef expression::argument<37>::type _37_type; typedef expression::argument<38>::type _38_type; typedef expression::argument<39>::type _39_type; typedef expression::argument<40>::type _40_type;
        expression::argument<1>::type const arg1 = {{{}}}; expression::argument<2>::type const arg2 = {{{}}}; expression::argument<3>::type const arg3 = {{{}}}; expression::argument<4>::type const arg4 = {{{}}}; expression::argument<5>::type const arg5 = {{{}}}; expression::argument<6>::type const arg6 = {{{}}}; expression::argument<7>::type const arg7 = {{{}}}; expression::argument<8>::type const arg8 = {{{}}}; expression::argument<9>::type const arg9 = {{{}}}; expression::argument<10>::type const arg10 = {{{}}}; expression::argument<11>::type const arg11 = {{{}}}; expression::argument<12>::type const arg12 = {{{}}}; expression::argument<13>::type const arg13 = {{{}}}; expression::argument<14>::type const arg14 = {{{}}}; expression::argument<15>::type const arg15 = {{{}}}; expression::argument<16>::type const arg16 = {{{}}}; expression::argument<17>::type const arg17 = {{{}}}; expression::argument<18>::type const arg18 = {{{}}}; expression::argument<19>::type const arg19 = {{{}}}; expression::argument<20>::type const arg20 = {{{}}}; expression::argument<21>::type const arg21 = {{{}}}; expression::argument<22>::type const arg22 = {{{}}}; expression::argument<23>::type const arg23 = {{{}}}; expression::argument<24>::type const arg24 = {{{}}}; expression::argument<25>::type const arg25 = {{{}}}; expression::argument<26>::type const arg26 = {{{}}}; expression::argument<27>::type const arg27 = {{{}}}; expression::argument<28>::type const arg28 = {{{}}}; expression::argument<29>::type const arg29 = {{{}}}; expression::argument<30>::type const arg30 = {{{}}}; expression::argument<31>::type const arg31 = {{{}}}; expression::argument<32>::type const arg32 = {{{}}}; expression::argument<33>::type const arg33 = {{{}}}; expression::argument<34>::type const arg34 = {{{}}}; expression::argument<35>::type const arg35 = {{{}}}; expression::argument<36>::type const arg36 = {{{}}}; expression::argument<37>::type const arg37 = {{{}}}; expression::argument<38>::type const arg38 = {{{}}}; expression::argument<39>::type const arg39 = {{{}}}; expression::argument<40>::type const arg40 = {{{}}};
        expression::argument<1>::type const _1 = {{{}}}; expression::argument<2>::type const _2 = {{{}}}; expression::argument<3>::type const _3 = {{{}}}; expression::argument<4>::type const _4 = {{{}}}; expression::argument<5>::type const _5 = {{{}}}; expression::argument<6>::type const _6 = {{{}}}; expression::argument<7>::type const _7 = {{{}}}; expression::argument<8>::type const _8 = {{{}}}; expression::argument<9>::type const _9 = {{{}}}; expression::argument<10>::type const _10 = {{{}}}; expression::argument<11>::type const _11 = {{{}}}; expression::argument<12>::type const _12 = {{{}}}; expression::argument<13>::type const _13 = {{{}}}; expression::argument<14>::type const _14 = {{{}}}; expression::argument<15>::type const _15 = {{{}}}; expression::argument<16>::type const _16 = {{{}}}; expression::argument<17>::type const _17 = {{{}}}; expression::argument<18>::type const _18 = {{{}}}; expression::argument<19>::type const _19 = {{{}}}; expression::argument<20>::type const _20 = {{{}}}; expression::argument<21>::type const _21 = {{{}}}; expression::argument<22>::type const _22 = {{{}}}; expression::argument<23>::type const _23 = {{{}}}; expression::argument<24>::type const _24 = {{{}}}; expression::argument<25>::type const _25 = {{{}}}; expression::argument<26>::type const _26 = {{{}}}; expression::argument<27>::type const _27 = {{{}}}; expression::argument<28>::type const _28 = {{{}}}; expression::argument<29>::type const _29 = {{{}}}; expression::argument<30>::type const _30 = {{{}}}; expression::argument<31>::type const _31 = {{{}}}; expression::argument<32>::type const _32 = {{{}}}; expression::argument<33>::type const _33 = {{{}}}; expression::argument<34>::type const _34 = {{{}}}; expression::argument<35>::type const _35 = {{{}}}; expression::argument<36>::type const _36 = {{{}}}; expression::argument<37>::type const _37 = {{{}}}; expression::argument<38>::type const _38 = {{{}}}; expression::argument<39>::type const _39 = {{{}}}; expression::argument<40>::type const _40 = {{{}}};
    }
