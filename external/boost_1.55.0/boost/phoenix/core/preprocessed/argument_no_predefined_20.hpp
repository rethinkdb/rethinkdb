/*==============================================================================
    Copyright (c) 2001-2010 Joel de Guzman
    Copyright (c) 2010-2011 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
    
    namespace placeholders
    {
        typedef expression::argument<1>::type arg1_type; typedef expression::argument<2>::type arg2_type; typedef expression::argument<3>::type arg3_type; typedef expression::argument<4>::type arg4_type; typedef expression::argument<5>::type arg5_type; typedef expression::argument<6>::type arg6_type; typedef expression::argument<7>::type arg7_type; typedef expression::argument<8>::type arg8_type; typedef expression::argument<9>::type arg9_type; typedef expression::argument<10>::type arg10_type; typedef expression::argument<11>::type arg11_type; typedef expression::argument<12>::type arg12_type; typedef expression::argument<13>::type arg13_type; typedef expression::argument<14>::type arg14_type; typedef expression::argument<15>::type arg15_type; typedef expression::argument<16>::type arg16_type; typedef expression::argument<17>::type arg17_type; typedef expression::argument<18>::type arg18_type; typedef expression::argument<19>::type arg19_type; typedef expression::argument<20>::type arg20_type;
        typedef expression::argument<1>::type _1_type; typedef expression::argument<2>::type _2_type; typedef expression::argument<3>::type _3_type; typedef expression::argument<4>::type _4_type; typedef expression::argument<5>::type _5_type; typedef expression::argument<6>::type _6_type; typedef expression::argument<7>::type _7_type; typedef expression::argument<8>::type _8_type; typedef expression::argument<9>::type _9_type; typedef expression::argument<10>::type _10_type; typedef expression::argument<11>::type _11_type; typedef expression::argument<12>::type _12_type; typedef expression::argument<13>::type _13_type; typedef expression::argument<14>::type _14_type; typedef expression::argument<15>::type _15_type; typedef expression::argument<16>::type _16_type; typedef expression::argument<17>::type _17_type; typedef expression::argument<18>::type _18_type; typedef expression::argument<19>::type _19_type; typedef expression::argument<20>::type _20_type;
    }
    namespace arg_names
    {
        typedef expression::argument<1>::type arg1_type; typedef expression::argument<2>::type arg2_type; typedef expression::argument<3>::type arg3_type; typedef expression::argument<4>::type arg4_type; typedef expression::argument<5>::type arg5_type; typedef expression::argument<6>::type arg6_type; typedef expression::argument<7>::type arg7_type; typedef expression::argument<8>::type arg8_type; typedef expression::argument<9>::type arg9_type; typedef expression::argument<10>::type arg10_type; typedef expression::argument<11>::type arg11_type; typedef expression::argument<12>::type arg12_type; typedef expression::argument<13>::type arg13_type; typedef expression::argument<14>::type arg14_type; typedef expression::argument<15>::type arg15_type; typedef expression::argument<16>::type arg16_type; typedef expression::argument<17>::type arg17_type; typedef expression::argument<18>::type arg18_type; typedef expression::argument<19>::type arg19_type; typedef expression::argument<20>::type arg20_type;
        typedef expression::argument<1>::type _1_type; typedef expression::argument<2>::type _2_type; typedef expression::argument<3>::type _3_type; typedef expression::argument<4>::type _4_type; typedef expression::argument<5>::type _5_type; typedef expression::argument<6>::type _6_type; typedef expression::argument<7>::type _7_type; typedef expression::argument<8>::type _8_type; typedef expression::argument<9>::type _9_type; typedef expression::argument<10>::type _10_type; typedef expression::argument<11>::type _11_type; typedef expression::argument<12>::type _12_type; typedef expression::argument<13>::type _13_type; typedef expression::argument<14>::type _14_type; typedef expression::argument<15>::type _15_type; typedef expression::argument<16>::type _16_type; typedef expression::argument<17>::type _17_type; typedef expression::argument<18>::type _18_type; typedef expression::argument<19>::type _19_type; typedef expression::argument<20>::type _20_type;
    }
