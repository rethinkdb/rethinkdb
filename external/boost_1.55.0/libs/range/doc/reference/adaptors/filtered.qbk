[/
    Copyright 2010 Neil Groves
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]
[section:filtered filtered]

[table
    [[Syntax] [Code]]
    [[Pipe] [`rng | boost::adaptors::filtered(pred)`]]
    [[Function] [`boost::adaptors::filter(rng, pred)`]]
]

* [*Precondition:]  The `value_type` of the range is convertible to the argument type of `pred`.
* [*Postcondition:] For all adjacent elements `[x]` in the returned range, `pred(x)` is `true`.
* [*Throws:] Whatever the copy constructor of `pred` might throw.
* [*Range Category:] __forward_range__
* [*Range Return Type:] `boost::filtered_range<typeof(rng)>`
* [*Returned Range Category:] The minimum of the range category of `rng` and __bidirectional_range__

[section:filtered_example filtered example]
[import ../../../test/adaptor_test/filtered_example.cpp]
[filtered_example]
[endsect]

This would produce the output:
``
2,4,6,8,
``
[endsect]


