# Copyright Paul A. Bristow 2013

# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

# jamfile.v2 to run all circular_buffer examples.

# bring in the rules for testing.
import testing ;

project
    : requirements
			<library>/boost/system//boost_system
			<library>/boost/thread//boost_thread
			#<define>BOOST_ALL_NO_LIB=1
			<threading>multi

      <toolset>gcc:<cxxflags>-Wno-missing-braces
      <toolset>darwin:<cxxflags>-Wno-missing-braces
      <toolset>acc:<cxxflags>+W2068,2461,2236,4070
      <toolset>intel:<cxxflags>-Qwd264,239
      <toolset>msvc:<warnings>all
      <toolset>msvc:<asynch-exceptions>on
			<toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
			<toolset>msvc:<define>_SCL_SECURE_NO_DEPRECATE
			<toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
			<toolset>msvc:<define>_CRT_SECURE_NO_WARNINGS
      <toolset>msvc:<cxxflags>/wd4996
      <toolset>msvc:<cxxflags>/wd4512
      <toolset>msvc:<cxxflags>/wd4610
      <toolset>msvc:<cxxflags>/wd4510
      <toolset>msvc:<cxxflags>/wd4127
      <toolset>msvc:<cxxflags>/wd4701
      <toolset>msvc:<cxxflags>/wd4127
      <toolset>msvc:<cxxflags>/wd4305
    ;
    
run bounded_buffer_comparison.cpp ;
run circular_buffer_iter_example.cpp ;
run circular_buffer_sum_example.cpp ;
run circular_buffer_bound_example.cpp ../../thread/build//boost_thread ../../timer/build//boost_timer ;

