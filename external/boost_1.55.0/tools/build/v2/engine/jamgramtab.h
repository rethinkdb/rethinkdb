    { "!", _BANG_t },
    { "!=", _BANG_EQUALS_t },
    { "&", _AMPER_t },
    { "&&", _AMPERAMPER_t },
    { "(", _LPAREN_t },
    { ")", _RPAREN_t },
    { "+=", _PLUS_EQUALS_t },
    { ":", _COLON_t },
    { ";", _SEMIC_t },
    { "<", _LANGLE_t },
    { "<=", _LANGLE_EQUALS_t },
    { "=", _EQUALS_t },
    { ">", _RANGLE_t },
    { ">=", _RANGLE_EQUALS_t },
    { "?=", _QUESTION_EQUALS_t },
    { "[", _LBRACKET_t },
    { "]", _RBRACKET_t },
    { "actions", ACTIONS_t },
    { "bind", BIND_t },
    { "case", CASE_t },
    { "class", CLASS_t },
    { "default", DEFAULT_t },
    { "else", ELSE_t },
    { "existing", EXISTING_t },
    { "for", FOR_t },
    { "if", IF_t },
    { "ignore", IGNORE_t },
    { "in", IN_t },
    { "include", INCLUDE_t },
    { "local", LOCAL_t },
    { "module", MODULE_t },
    { "on", ON_t },
    { "piecemeal", PIECEMEAL_t },
    { "quietly", QUIETLY_t },
    { "return", RETURN_t },
    { "rule", RULE_t },
    { "switch", SWITCH_t },
    { "together", TOGETHER_t },
    { "updated", UPDATED_t },
    { "while", WHILE_t },
    { "{", _LBRACE_t },
    { "|", _BAR_t },
    { "||", _BARBAR_t },
    { "}", _RBRACE_t },
