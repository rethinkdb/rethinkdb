{
  "name": "browser-pack",
  "version": "2.0.1",
  "description": "pack node-style source files from a json stream into a browser bundle",
  "main": "index.js",
  "bin": {
    "browser-pack": "bin/cmd.js"
  },
  "dependencies": {
    "JSONStream": "~0.6.4",
    "through": "~2.3.4",
    "combine-source-map": "~0.3.0"
  },
  "devDependencies": {
    "tap": "~0.4.0",
    "tape": "~0.2.2",
    "uglify-js": "1.3.5",
    "convert-source-map": "~0.3.1",
    "parse-base64vlq-mappings": "~0.1.1"
  },
  "scripts": {
    "test": "tap test/*.js",
    "prepublish": "node bin/prepublish.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8",
      "ie/9",
      "ie/10",
      "chrome/15",
      "chrome/latest",
      "firefox/10",
      "firefox/latest",
      "safari/latest",
      "opera/latest"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/browser-pack.git"
  },
  "homepage": "https://github.com/substack/browser-pack",
  "keywords": [
    "browser",
    "bundle",
    "commonjs",
    "commonj-esque",
    "exports",
    "module.exports",
    "require"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# browser-pack\n\npack node-style source files from a json stream into a browser bundle\n\n[![browser support](http://ci.testling.com/substack/browser-pack.png)](http://ci.testling.com/substack/browser-pack)\n\n[![build status](https://secure.travis-ci.org/substack/browser-pack.png)](http://travis-ci.org/substack/browser-pack)\n\n# example\n\njson input:\n\n``` json\n[\n  {\n    \"id\": \"a1b5af78\",\n    \"source\": \"console.log(require('./foo')(5))\",\n    \"deps\": { \"./foo\": \"b8f69fa5\" },\n    \"entry\": true\n  },\n  {\n    \"id\": \"b8f69fa5\",\n    \"source\": \"module.exports = function (n) { return n * 111 }\",\n    \"deps\": {}\n  }\n]\n```\n\nbundle script:\n\n``` js\nvar pack = require('browser-pack')();\nprocess.stdin.pipe(pack).pipe(process.stdout);\nprocess.stdin.resume();\n```\n\noutput:\n\n```\n$ browser-pack < input.json\n(function(p,c,e){function r(n){if(!c[n]){c[n]={exports:{}};p[n][0](function(x){return r(p[n][1][x])},c[n],c[n].exports);}return c[n].exports}for(var i=0;i<e.length;i++)r(e[i]);return r})({\"a1b5af78\":[function(require,module,exports){console.log(require('./foo')(5))},{\"./foo\":\"b8f69fa5\"}],\"b8f69fa5\":[function(require,module,exports){module.exports = function (n) { return n * 111 }},{}]},{},[\"a1b5af78\",\"b8f69fa5\"])\n```\n\n# methods\n\n``` js\nvar pack = require('browser-pack');\n```\n\n## pack(opts)\n\nReturn a through stream that takes a stream of json input and produces a stream\nof javascript output. This module does not export its internal `require()`\nfunction but you can prepend `'var require='` to the stream contents to get the\nrequire function. `require()` will return `undefined` when a module hasn't been\ndefined to support splitting up modules across several bundles with custom\nfallback logic.\n\nIf `opts.raw` is given, the writable end of the stream will expect objects to be\nwritten to it instead of expecting a stream of json text it will need to parse.\n\nIf `opts.sourceMapPrefix` is given and source maps are computed, the\n`opts.sourceMapPrefix` string will be used instead of `//#`.\n\nAdditionally, rows with a truthy `entry` may have an `order` field that\ndetermines the numeric index to execute the entries in.\n\nYou can specify a custom prelude with `opts.prelude` but you should really know\nwhat you're doing first. See the `prelude.js` file in this repo for the default\nprelude. If you specify a custom prelude, you must also specify a valid\n`opts.preludePath` to the prelude source file for sourcemaps to work.\n\n# install\n\nWith [npm](https://npmjs.org), to get the library do:\n\n```\nnpm install browser-pack\n```\n\nand to get the command-line tool do:\n\n```\nnpm install -g browser-pack\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/browser-pack/issues"
  },
  "_id": "browser-pack@2.0.1",
  "dist": {
    "shasum": "5d1c527f56c582677411c4db2a128648ff6bf150"
  },
  "_from": "https://registry.npmjs.org/browser-pack/-/browser-pack-2.0.1.tgz",
  "_resolved": "https://registry.npmjs.org/browser-pack/-/browser-pack-2.0.1.tgz"
}
