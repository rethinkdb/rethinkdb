{
  "name": "insert-module-globals",
  "version": "3.1.2",
  "description": "insert implicit module globals into a module-deps stream",
  "main": "index.js",
  "bin": {
    "insert-module-globals": "bin/cmd.js"
  },
  "dependencies": {
    "lexical-scope": "~0.1.0",
    "process": "~0.5.1",
    "through": "~2.3.4",
    "JSONStream": "~0.7.1",
    "concat-stream": "~1.4.1"
  },
  "devDependencies": {
    "tap": "~0.4.0",
    "browser-pack": "~0.10.2",
    "module-deps": "~1.4.0",
    "native-buffer-browserify": "~2.0.16"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/insert-module-globals.git"
  },
  "homepage": "https://github.com/substack/insert-module-globals",
  "keywords": [
    "__filename",
    "__dirname",
    "global",
    "process",
    "module-deps",
    "browser-pack",
    "browserify"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# insert-module-globals\n\ninsert implicit module globals\n(`__filename`, `__dirname`, `process`, `global`, and `Buffer`)\nas a browserify-style transform\n\n[![build status](https://secure.travis-ci.org/substack/insert-module-globals.png)](http://travis-ci.org/substack/insert-module-globals)\n\n# example\n\n``` js\nvar mdeps = require('module-deps');\nvar bpack = require('browser-pack');\nvar insert = require('insert-module-globals');\nfunction inserter (file) {\n    return insert(file, { basedir: __dirname + '/files' });\n}\n\nvar files = [ __dirname + '/files/main.js' ];\nmdeps(files, { transform: inserter })\n    .pipe(bpack({ raw: true }))\n    .pipe(process.stdout)\n;\n```\n\n```\n$ node example/insert.js | node\nin main.js: {\"__filename\":\"/main.js\",\"__dirname\":\"/\"}\nin foo/index.js: {\"__filename\":\"/foo/index.js\",\"__dirname\":\"/foo\"}\n```\n\nor use the command-line scripts:\n\n```\n$ module-deps main.js | insert-module-globals | browser-pack | node\nin main.js: {\"__filename\":\"/main.js\",\"__dirname\":\"/\"}\nin foo/index.js: {\"__filename\":\"/foo/index.js\",\"__dirname\":\"/foo\"}\n```\n\nor use insert-module-globals as a transform:\n\n```\n$ module-deps main.js --transform insert-module-globals | browser-pack | node\nin main.js: {\"__filename\":\"/main.js\",\"__dirname\":\"/\"}\nin foo/index.js: {\"__filename\":\"/foo/index.js\",\"__dirname\":\"/foo\"}\n```\n\n# methods\n\n``` js\nvar insertGlobals = require('insert-module-globals')\n```\n\n## insertGlobals(file, opts)\n\nReturn a transform stream for the filename `file` that will accept a javascript\nfile as input and will output the file with a closure around the contents as\nnecessary to define extra builtins.\n\nWhen `opts.always` is truthy, wrap every file with all the global variables\nwithout parsing. This is handy because parsing the scope can take a long time,\nso you can prioritize fast builds over saving bytes in the final output.\n\n# usage\n\n```\nusage: insert-module-globals {basedir}\n```\n\n# install\n\nWith [npm](https://npmjs.org), to get the library do:\n\n```\nnpm install insert-module-globals\n```\n\nand to get the bin script do:\n\n```\nnpm install -g insert-module-globals\n```\n\n# insert custom globals.\n\n`insert-module-globals` can also insert arbitary globals into files.\nPass in an object of functions as the `vars` option.\n\n``` js\nvar vars = {\n    process: function (row, basedir) {\n        return {\n            id: \"path/to/custom_process.js\",\n            source: customProcessContent\n        }\n    },\n    Buffer: function (row, basedir) {\n        return {\n            id: \"path/to/custom_buffer.js,\n            source: customProcessContent,\n            //suffix is optional\n            //it's used to extract the value from the module.\n            //it becomes: require(...).Buffer in this case.\n            suffix: '.Buffer'\n        }\n    },\n    Math: function () {\n        //if you return a string,\n        //it's simply set as the value.\n        return '{}'\n        //^ any attempt to use Math[x] will throw!\n    }\n}\n\nfunction inserter (file) {\n    return insert(file, { vars: vars });\n}\nmdeps(files, { transform: inserter })\n    .pipe(bpack({ raw: true }))\n    .pipe(process.stdout)\n```\n\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/insert-module-globals/issues"
  },
  "_id": "insert-module-globals@3.1.2",
  "dist": {
    "shasum": "4edf35d42c7f41fba65f7356c07396e6fcbce990"
  },
  "_from": "https://registry.npmjs.org/insert-module-globals/-/insert-module-globals-3.1.2.tgz",
  "_resolved": "https://registry.npmjs.org/insert-module-globals/-/insert-module-globals-3.1.2.tgz"
}
