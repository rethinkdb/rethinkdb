/* start of generated data */

static BN_ULONG bn_group_1024_value[] = {
	bn_pack4(9FC6,1D2F,C0EB,06E3),
	bn_pack4(FD51,38FE,8376,435B),
	bn_pack4(2FD4,CBF4,976E,AA9A),
	bn_pack4(68ED,BC3C,0572,6CC0),
	bn_pack4(C529,F566,660E,57EC),
	bn_pack4(8255,9B29,7BCF,1885),
	bn_pack4(CE8E,F4AD,69B1,5D49),
	bn_pack4(5DC7,D7B4,6154,D6B6),
	bn_pack4(8E49,5C1D,6089,DAD1),
	bn_pack4(E0D5,D8E2,50B9,8BE4),
	bn_pack4(383B,4813,D692,C6E0),
	bn_pack4(D674,DF74,96EA,81D3),
	bn_pack4(9EA2,314C,9C25,6576),
	bn_pack4(6072,6187,75FF,3C0B),
	bn_pack4(9C33,F80A,FA8F,C5E8),
	bn_pack4(EEAF,0AB9,ADB3,8DD6)
};
static BIGNUM bn_group_1024 = {
	bn_group_1024_value,
	(sizeof bn_group_1024_value)/sizeof(BN_ULONG),
	(sizeof bn_group_1024_value)/sizeof(BN_ULONG),
	0,
	BN_FLG_STATIC_DATA
};

static BN_ULONG bn_group_1536_value[] = {
	bn_pack4(CF76,E3FE,D135,F9BB),
	bn_pack4(1518,0F93,499A,234D),
	bn_pack4(8CE7,A28C,2442,C6F3),
	bn_pack4(5A02,1FFF,5E91,479E),
	bn_pack4(7F8A,2FE9,B8B5,292E),
	bn_pack4(837C,264A,E3A9,BEB8),
	bn_pack4(E442,734A,F7CC,B7AE),
	bn_pack4(6577,2E43,7D6C,7F8C),
	bn_pack4(DB2F,D53D,24B7,C486),
	bn_pack4(6EDF,0195,3934,9627),
	bn_pack4(158B,FD3E,2B9C,8CF5),
	bn_pack4(764E,3F4B,53DD,9DA1),
	bn_pack4(4754,8381,DBC5,B1FC),
	bn_pack4(9B60,9E0B,E3BA,B63D),
	bn_pack4(8134,B1C8,B979,8914),
	bn_pack4(DF02,8A7C,EC67,F0D0),
	bn_pack4(80B6,55BB,9A22,E8DC),
	bn_pack4(1558,903B,A0D0,F843),
	bn_pack4(51C6,A94B,E460,7A29),
	bn_pack4(5F4F,5F55,6E27,CBDE),
	bn_pack4(BEEE,A961,4B19,CC4D),
	bn_pack4(DBA5,1DF4,99AC,4C80),
	bn_pack4(B1F1,2A86,17A4,7BBB),
	bn_pack4(9DEF,3CAF,B939,277A)
};
static BIGNUM bn_group_1536 = {
	bn_group_1536_value,
	(sizeof bn_group_1536_value)/sizeof(BN_ULONG),
	(sizeof bn_group_1536_value)/sizeof(BN_ULONG),
	0,
	BN_FLG_STATIC_DATA
};

static BN_ULONG bn_group_2048_value[] = {
	bn_pack4(0FA7,111F,9E4A,FF73),
	bn_pack4(9B65,E372,FCD6,8EF2),
	bn_pack4(35DE,236D,525F,5475),
	bn_pack4(94B5,C803,D89F,7AE4),
	bn_pack4(71AE,35F8,E9DB,FBB6),
	bn_pack4(2A56,98F3,A8D0,C382),
	bn_pack4(9CCC,041C,7BC3,08D8),
	bn_pack4(AF87,4E73,03CE,5329),
	bn_pack4(6160,2790,04E5,7AE6),
	bn_pack4(032C,FBDB,F52F,B378),
	bn_pack4(5EA7,7A27,75D2,ECFA),
	bn_pack4(5445,23B5,24B0,D57D),
	bn_pack4(5B9D,32E6,88F8,7748),
	bn_pack4(F1D2,B907,8717,461A),
	bn_pack4(76BD,207A,436C,6481),
	bn_pack4(CA97,B43A,23FB,8016),
	bn_pack4(1D28,1E44,6B14,773B),
	bn_pack4(7359,D041,D5C3,3EA7),
	bn_pack4(A80D,740A,DBF4,FF74),
	bn_pack4(55F9,7993,EC97,5EEA),
	bn_pack4(2918,A996,2F0B,93B8),
	bn_pack4(661A,05FB,D5FA,AAE8),
	bn_pack4(CF60,9517,9A16,3AB3),
	bn_pack4(E808,3969,EDB7,67B0),
	bn_pack4(CD7F,48A9,DA04,FD50),
	bn_pack4(D523,12AB,4B03,310D),
	bn_pack4(8193,E075,7767,A13D),
	bn_pack4(A373,29CB,B4A0,99ED),
	bn_pack4(FC31,9294,3DB5,6050),
	bn_pack4(AF72,B665,1987,EE07),
	bn_pack4(F166,DE5E,1389,582F),
	bn_pack4(AC6B,DB41,324A,9A9B)
};
static BIGNUM bn_group_2048 = {
	bn_group_2048_value,
	(sizeof bn_group_2048_value)/sizeof(BN_ULONG),
	(sizeof bn_group_2048_value)/sizeof(BN_ULONG),
	0,
	BN_FLG_STATIC_DATA
};

static BN_ULONG bn_group_3072_value[] = {
	bn_pack4(FFFF,FFFF,FFFF,FFFF),
	bn_pack4(4B82,D120,A93A,D2CA),
	bn_pack4(43DB,5BFC,E0FD,108E),
	bn_pack4(08E2,4FA0,74E5,AB31),
	bn_pack4(7709,88C0,BAD9,46E2),
	bn_pack4(BBE1,1757,7A61,5D6C),
	bn_pack4(521F,2B18,177B,200C),
	bn_pack4(D876,0273,3EC8,6A64),
	bn_pack4(F12F,FA06,D98A,0864),
	bn_pack4(CEE3,D226,1AD2,EE6B),
	bn_pack4(1E8C,94E0,4A25,619D),
	bn_pack4(ABF5,AE8C,DB09,33D7),
	bn_pack4(B397,0F85,A6E1,E4C7),
	bn_pack4(8AEA,7157,5D06,0C7D),
	bn_pack4(ECFB,8504,58DB,EF0A),
	bn_pack4(A855,21AB,DF1C,BA64),
	bn_pack4(AD33,170D,0450,7A33),
	bn_pack4(1572,8E5A,8AAA,C42D),
	bn_pack4(15D2,2618,98FA,0510),
	bn_pack4(3995,497C,EA95,6AE5),
	bn_pack4(DE2B,CBF6,9558,1718),
	bn_pack4(B5C5,5DF0,6F4C,52C9),
	bn_pack4(9B27,83A2,EC07,A28F),
	bn_pack4(E39E,772C,180E,8603),
	bn_pack4(3290,5E46,2E36,CE3B),
	bn_pack4(F174,6C08,CA18,217C),
	bn_pack4(670C,354E,4ABC,9804),
	bn_pack4(9ED5,2907,7096,966D),
	bn_pack4(1C62,F356,2085,52BB),
	bn_pack4(8365,5D23,DCA3,AD96),
	bn_pack4(6916,3FA8,FD24,CF5F),
	bn_pack4(98DA,4836,1C55,D39A),
	bn_pack4(C200,7CB8,A163,BF05),
	bn_pack4(4928,6651,ECE4,5B3D),
	bn_pack4(AE9F,2411,7C4B,1FE6),
	bn_pack4(EE38,6BFB,5A89,9FA5),
	bn_pack4(0BFF,5CB6,F406,B7ED),
	bn_pack4(F44C,42E9,A637,ED6B),
	bn_pack4(E485,B576,625E,7EC6),
	bn_pack4(4FE1,356D,6D51,C245),
	bn_pack4(302B,0A6D,F25F,1437),
	bn_pack4(EF95,19B3,CD3A,431B),
	bn_pack4(514A,0879,8E34,04DD),
	bn_pack4(020B,BEA6,3B13,9B22),
	bn_pack4(2902,4E08,8A67,CC74),
	bn_pack4(C4C6,628B,80DC,1CD1),
	bn_pack4(C90F,DAA2,2168,C234),
	bn_pack4(FFFF,FFFF,FFFF,FFFF)
};
static BIGNUM bn_group_3072 = {
	bn_group_3072_value,
	(sizeof bn_group_3072_value)/sizeof(BN_ULONG),
	(sizeof bn_group_3072_value)/sizeof(BN_ULONG),
	0,
	BN_FLG_STATIC_DATA
};

static BN_ULONG bn_group_4096_value[] = {
	bn_pack4(FFFF,FFFF,FFFF,FFFF),
	bn_pack4(4DF4,35C9,3406,3199),
	bn_pack4(86FF,B7DC,90A6,C08F),
	bn_pack4(93B4,EA98,8D8F,DDC1),
	bn_pack4(D006,9127,D5B0,5AA9),
	bn_pack4(B81B,DD76,2170,481C),
	bn_pack4(1F61,2970,CEE2,D7AF),
	bn_pack4(233B,A186,515B,E7ED),
	bn_pack4(99B2,964F,A090,C3A2),
	bn_pack4(287C,5947,4E6B,C05D),
	bn_pack4(2E8E,FC14,1FBE,CAA6),
	bn_pack4(DBBB,C2DB,04DE,8EF9),
	bn_pack4(2583,E9CA,2AD4,4CE8),
	bn_pack4(1A94,6834,B615,0BDA),
	bn_pack4(99C3,2718,6AF4,E23C),
	bn_pack4(8871,9A10,BDBA,5B26),
	bn_pack4(1A72,3C12,A787,E6D7),
	bn_pack4(4B82,D120,A921,0801),
	bn_pack4(43DB,5BFC,E0FD,108E),
	bn_pack4(08E2,4FA0,74E5,AB31),
	bn_pack4(7709,88C0,BAD9,46E2),
	bn_pack4(BBE1,1757,7A61,5D6C),
	bn_pack4(521F,2B18,177B,200C),
	bn_pack4(D876,0273,3EC8,6A64),
	bn_pack4(F12F,FA06,D98A,0864),
	bn_pack4(CEE3,D226,1AD2,EE6B),
	bn_pack4(1E8C,94E0,4A25,619D),
	bn_pack4(ABF5,AE8C,DB09,33D7),
	bn_pack4(B397,0F85,A6E1,E4C7),
	bn_pack4(8AEA,7157,5D06,0C7D),
	bn_pack4(ECFB,8504,58DB,EF0A),
	bn_pack4(A855,21AB,DF1C,BA64),
	bn_pack4(AD33,170D,0450,7A33),
	bn_pack4(1572,8E5A,8AAA,C42D),
	bn_pack4(15D2,2618,98FA,0510),
	bn_pack4(3995,497C,EA95,6AE5),
	bn_pack4(DE2B,CBF6,9558,1718),
	bn_pack4(B5C5,5DF0,6F4C,52C9),
	bn_pack4(9B27,83A2,EC07,A28F),
	bn_pack4(E39E,772C,180E,8603),
	bn_pack4(3290,5E46,2E36,CE3B),
	bn_pack4(F174,6C08,CA18,217C),
	bn_pack4(670C,354E,4ABC,9804),
	bn_pack4(9ED5,2907,7096,966D),
	bn_pack4(1C62,F356,2085,52BB),
	bn_pack4(8365,5D23,DCA3,AD96),
	bn_pack4(6916,3FA8,FD24,CF5F),
	bn_pack4(98DA,4836,1C55,D39A),
	bn_pack4(C200,7CB8,A163,BF05),
	bn_pack4(4928,6651,ECE4,5B3D),
	bn_pack4(AE9F,2411,7C4B,1FE6),
	bn_pack4(EE38,6BFB,5A89,9FA5),
	bn_pack4(0BFF,5CB6,F406,B7ED),
	bn_pack4(F44C,42E9,A637,ED6B),
	bn_pack4(E485,B576,625E,7EC6),
	bn_pack4(4FE1,356D,6D51,C245),
	bn_pack4(302B,0A6D,F25F,1437),
	bn_pack4(EF95,19B3,CD3A,431B),
	bn_pack4(514A,0879,8E34,04DD),
	bn_pack4(020B,BEA6,3B13,9B22),
	bn_pack4(2902,4E08,8A67,CC74),
	bn_pack4(C4C6,628B,80DC,1CD1),
	bn_pack4(C90F,DAA2,2168,C234),
	bn_pack4(FFFF,FFFF,FFFF,FFFF)
};
static BIGNUM bn_group_4096 = {
	bn_group_4096_value,
	(sizeof bn_group_4096_value)/sizeof(BN_ULONG),
	(sizeof bn_group_4096_value)/sizeof(BN_ULONG),
	0,
	BN_FLG_STATIC_DATA
};

static BN_ULONG bn_group_6144_value[] = {
	bn_pack4(FFFF,FFFF,FFFF,FFFF),
	bn_pack4(E694,F91E,6DCC,4024),
	bn_pack4(12BF,2D5B,0B74,74D6),
	bn_pack4(043E,8F66,3F48,60EE),
	bn_pack4(387F,E8D7,6E3C,0468),
	bn_pack4(DA56,C9EC,2EF2,9632),
	bn_pack4(EB19,CCB1,A313,D55C),
	bn_pack4(F550,AA3D,8A1F,BFF0),
	bn_pack4(06A1,D58B,B7C5,DA76),
	bn_pack4(A797,15EE,F29B,E328),
	bn_pack4(14CC,5ED2,0F80,37E0),
	bn_pack4(CC8F,6D7E,BF48,E1D8),
	bn_pack4(4BD4,07B2,2B41,54AA),
	bn_pack4(0F1D,45B7,FF58,5AC5),
	bn_pack4(23A9,7A7E,36CC,88BE),
	bn_pack4(59E7,C97F,BEC7,E8F3),
	bn_pack4(B5A8,4031,900B,1C9E),
	bn_pack4(D55E,702F,4698,0C82),
	bn_pack4(F482,D7CE,6E74,FEF6),
	bn_pack4(F032,EA15,D172,1D03),
	bn_pack4(5983,CA01,C64B,92EC),
	bn_pack4(6FB8,F401,378C,D2BF),
	bn_pack4(3320,5151,2BD7,AF42),
	bn_pack4(DB7F,1447,E6CC,254B),
	bn_pack4(44CE,6CBA,CED4,BB1B),
	bn_pack4(DA3E,DBEB,CF9B,14ED),
	bn_pack4(1797,27B0,865A,8918),
	bn_pack4(B06A,53ED,9027,D831),
	bn_pack4(E5DB,382F,4130,01AE),
	bn_pack4(F8FF,9406,AD9E,530E),
	bn_pack4(C975,1E76,3DBA,37BD),
	bn_pack4(C1D4,DCB2,6026,46DE),
	bn_pack4(36C3,FAB4,D27C,7026),
	bn_pack4(4DF4,35C9,3402,8492),
	bn_pack4(86FF,B7DC,90A6,C08F),
	bn_pack4(93B4,EA98,8D8F,DDC1),
	bn_pack4(D006,9127,D5B0,5AA9),
	bn_pack4(B81B,DD76,2170,481C),
	bn_pack4(1F61,2970,CEE2,D7AF),
	bn_pack4(233B,A186,515B,E7ED),
	bn_pack4(99B2,964F,A090,C3A2),
	bn_pack4(287C,5947,4E6B,C05D),
	bn_pack4(2E8E,FC14,1FBE,CAA6),
	bn_pack4(DBBB,C2DB,04DE,8EF9),
	bn_pack4(2583,E9CA,2AD4,4CE8),
	bn_pack4(1A94,6834,B615,0BDA),
	bn_pack4(99C3,2718,6AF4,E23C),
	bn_pack4(8871,9A10,BDBA,5B26),
	bn_pack4(1A72,3C12,A787,E6D7),
	bn_pack4(4B82,D120,A921,0801),
	bn_pack4(43DB,5BFC,E0FD,108E),
	bn_pack4(08E2,4FA0,74E5,AB31),
	bn_pack4(7709,88C0,BAD9,46E2),
	bn_pack4(BBE1,1757,7A61,5D6C),
	bn_pack4(521F,2B18,177B,200C),
	bn_pack4(D876,0273,3EC8,6A64),
	bn_pack4(F12F,FA06,D98A,0864),
	bn_pack4(CEE3,D226,1AD2,EE6B),
	bn_pack4(1E8C,94E0,4A25,619D),
	bn_pack4(ABF5,AE8C,DB09,33D7),
	bn_pack4(B397,0F85,A6E1,E4C7),
	bn_pack4(8AEA,7157,5D06,0C7D),
	bn_pack4(ECFB,8504,58DB,EF0A),
	bn_pack4(A855,21AB,DF1C,BA64),
	bn_pack4(AD33,170D,0450,7A33),
	bn_pack4(1572,8E5A,8AAA,C42D),
	bn_pack4(15D2,2618,98FA,0510),
	bn_pack4(3995,497C,EA95,6AE5),
	bn_pack4(DE2B,CBF6,9558,1718),
	bn_pack4(B5C5,5DF0,6F4C,52C9),
	bn_pack4(9B27,83A2,EC07,A28F),
	bn_pack4(E39E,772C,180E,8603),
	bn_pack4(3290,5E46,2E36,CE3B),
	bn_pack4(F174,6C08,CA18,217C),
	bn_pack4(670C,354E,4ABC,9804),
	bn_pack4(9ED5,2907,7096,966D),
	bn_pack4(1C62,F356,2085,52BB),
	bn_pack4(8365,5D23,DCA3,AD96),
	bn_pack4(6916,3FA8,FD24,CF5F),
	bn_pack4(98DA,4836,1C55,D39A),
	bn_pack4(C200,7CB8,A163,BF05),
	bn_pack4(4928,6651,ECE4,5B3D),
	bn_pack4(AE9F,2411,7C4B,1FE6),
	bn_pack4(EE38,6BFB,5A89,9FA5),
	bn_pack4(0BFF,5CB6,F406,B7ED),
	bn_pack4(F44C,42E9,A637,ED6B),
	bn_pack4(E485,B576,625E,7EC6),
	bn_pack4(4FE1,356D,6D51,C245),
	bn_pack4(302B,0A6D,F25F,1437),
	bn_pack4(EF95,19B3,CD3A,431B),
	bn_pack4(514A,0879,8E34,04DD),
	bn_pack4(020B,BEA6,3B13,9B22),
	bn_pack4(2902,4E08,8A67,CC74),
	bn_pack4(C4C6,628B,80DC,1CD1),
	bn_pack4(C90F,DAA2,2168,C234),
	bn_pack4(FFFF,FFFF,FFFF,FFFF)
};
static BIGNUM bn_group_6144 = {
	bn_group_6144_value,
	(sizeof bn_group_6144_value)/sizeof(BN_ULONG),
	(sizeof bn_group_6144_value)/sizeof(BN_ULONG),
	0,
	BN_FLG_STATIC_DATA
};

static BN_ULONG bn_group_8192_value[] = {
	bn_pack4(FFFF,FFFF,FFFF,FFFF),
	bn_pack4(60C9,80DD,98ED,D3DF),
	bn_pack4(C81F,56E8,80B9,6E71),
	bn_pack4(9E30,50E2,7656,94DF),
	bn_pack4(9558,E447,5677,E9AA),
	bn_pack4(C919,0DA6,FC02,6E47),
	bn_pack4(889A,002E,D5EE,382B),
	bn_pack4(4009,438B,481C,6CD7),
	bn_pack4(3590,46F4,EB87,9F92),
	bn_pack4(FAF3,6BC3,1ECF,A268),
	bn_pack4(B1D5,10BD,7EE7,4D73),
	bn_pack4(F9AB,4819,5DED,7EA1),
	bn_pack4(64F3,1CC5,0846,851D),
	bn_pack4(4597,E899,A025,5DC1),
	bn_pack4(DF31,0EE0,74AB,6A36),
	bn_pack4(6D2A,13F8,3F44,F82D),
	bn_pack4(062B,3CF5,B3A2,78A6),
	bn_pack4(7968,3303,ED5B,DD3A),
	bn_pack4(FA9D,4B7F,A2C0,87E8),
	bn_pack4(4BCB,C886,2F83,85DD),
	bn_pack4(3473,FC64,6CEA,306B),
	bn_pack4(13EB,57A8,1A23,F0C7),
	bn_pack4(2222,2E04,A403,7C07),
	bn_pack4(E3FD,B8BE,FC84,8AD9),
	bn_pack4(238F,16CB,E39D,652D),
	bn_pack4(3423,B474,2BF1,C978),
	bn_pack4(3AAB,639C,5AE4,F568),
	bn_pack4(2576,F693,6BA4,2466),
	bn_pack4(741F,A7BF,8AFC,47ED),
	bn_pack4(3BC8,32B6,8D9D,D300),
	bn_pack4(D8BE,C4D0,73B9,31BA),
	bn_pack4(3877,7CB6,A932,DF8C),
	bn_pack4(74A3,926F,12FE,E5E4),
	bn_pack4(E694,F91E,6DBE,1159),
	bn_pack4(12BF,2D5B,0B74,74D6),
	bn_pack4(043E,8F66,3F48,60EE),
	bn_pack4(387F,E8D7,6E3C,0468),
	bn_pack4(DA56,C9EC,2EF2,9632),
	bn_pack4(EB19,CCB1,A313,D55C),
	bn_pack4(F550,AA3D,8A1F,BFF0),
	bn_pack4(06A1,D58B,B7C5,DA76),
	bn_pack4(A797,15EE,F29B,E328),
	bn_pack4(14CC,5ED2,0F80,37E0),
	bn_pack4(CC8F,6D7E,BF48,E1D8),
	bn_pack4(4BD4,07B2,2B41,54AA),
	bn_pack4(0F1D,45B7,FF58,5AC5),
	bn_pack4(23A9,7A7E,36CC,88BE),
	bn_pack4(59E7,C97F,BEC7,E8F3),
	bn_pack4(B5A8,4031,900B,1C9E),
	bn_pack4(D55E,702F,4698,0C82),
	bn_pack4(F482,D7CE,6E74,FEF6),
	bn_pack4(F032,EA15,D172,1D03),
	bn_pack4(5983,CA01,C64B,92EC),
	bn_pack4(6FB8,F401,378C,D2BF),
	bn_pack4(3320,5151,2BD7,AF42),
	bn_pack4(DB7F,1447,E6CC,254B),
	bn_pack4(44CE,6CBA,CED4,BB1B),
	bn_pack4(DA3E,DBEB,CF9B,14ED),
	bn_pack4(1797,27B0,865A,8918),
	bn_pack4(B06A,53ED,9027,D831),
	bn_pack4(E5DB,382F,4130,01AE),
	bn_pack4(F8FF,9406,AD9E,530E),
	bn_pack4(C975,1E76,3DBA,37BD),
	bn_pack4(C1D4,DCB2,6026,46DE),
	bn_pack4(36C3,FAB4,D27C,7026),
	bn_pack4(4DF4,35C9,3402,8492),
	bn_pack4(86FF,B7DC,90A6,C08F),
	bn_pack4(93B4,EA98,8D8F,DDC1),
	bn_pack4(D006,9127,D5B0,5AA9),
	bn_pack4(B81B,DD76,2170,481C),
	bn_pack4(1F61,2970,CEE2,D7AF),
	bn_pack4(233B,A186,515B,E7ED),
	bn_pack4(99B2,964F,A090,C3A2),
	bn_pack4(287C,5947,4E6B,C05D),
	bn_pack4(2E8E,FC14,1FBE,CAA6),
	bn_pack4(DBBB,C2DB,04DE,8EF9),
	bn_pack4(2583,E9CA,2AD4,4CE8),
	bn_pack4(1A94,6834,B615,0BDA),
	bn_pack4(99C3,2718,6AF4,E23C),
	bn_pack4(8871,9A10,BDBA,5B26),
	bn_pack4(1A72,3C12,A787,E6D7),
	bn_pack4(4B82,D120,A921,0801),
	bn_pack4(43DB,5BFC,E0FD,108E),
	bn_pack4(08E2,4FA0,74E5,AB31),
	bn_pack4(7709,88C0,BAD9,46E2),
	bn_pack4(BBE1,1757,7A61,5D6C),
	bn_pack4(521F,2B18,177B,200C),
	bn_pack4(D876,0273,3EC8,6A64),
	bn_pack4(F12F,FA06,D98A,0864),
	bn_pack4(CEE3,D226,1AD2,EE6B),
	bn_pack4(1E8C,94E0,4A25,619D),
	bn_pack4(ABF5,AE8C,DB09,33D7),
	bn_pack4(B397,0F85,A6E1,E4C7),
	bn_pack4(8AEA,7157,5D06,0C7D),
	bn_pack4(ECFB,8504,58DB,EF0A),
	bn_pack4(A855,21AB,DF1C,BA64),
	bn_pack4(AD33,170D,0450,7A33),
	bn_pack4(1572,8E5A,8AAA,C42D),
	bn_pack4(15D2,2618,98FA,0510),
	bn_pack4(3995,497C,EA95,6AE5),
	bn_pack4(DE2B,CBF6,9558,1718),
	bn_pack4(B5C5,5DF0,6F4C,52C9),
	bn_pack4(9B27,83A2,EC07,A28F),
	bn_pack4(E39E,772C,180E,8603),
	bn_pack4(3290,5E46,2E36,CE3B),
	bn_pack4(F174,6C08,CA18,217C),
	bn_pack4(670C,354E,4ABC,9804),
	bn_pack4(9ED5,2907,7096,966D),
	bn_pack4(1C62,F356,2085,52BB),
	bn_pack4(8365,5D23,DCA3,AD96),
	bn_pack4(6916,3FA8,FD24,CF5F),
	bn_pack4(98DA,4836,1C55,D39A),
	bn_pack4(C200,7CB8,A163,BF05),
	bn_pack4(4928,6651,ECE4,5B3D),
	bn_pack4(AE9F,2411,7C4B,1FE6),
	bn_pack4(EE38,6BFB,5A89,9FA5),
	bn_pack4(0BFF,5CB6,F406,B7ED),
	bn_pack4(F44C,42E9,A637,ED6B),
	bn_pack4(E485,B576,625E,7EC6),
	bn_pack4(4FE1,356D,6D51,C245),
	bn_pack4(302B,0A6D,F25F,1437),
	bn_pack4(EF95,19B3,CD3A,431B),
	bn_pack4(514A,0879,8E34,04DD),
	bn_pack4(020B,BEA6,3B13,9B22),
	bn_pack4(2902,4E08,8A67,CC74),
	bn_pack4(C4C6,628B,80DC,1CD1),
	bn_pack4(C90F,DAA2,2168,C234),
	bn_pack4(FFFF,FFFF,FFFF,FFFF)
};
static BIGNUM bn_group_8192 = {
	bn_group_8192_value,
	(sizeof bn_group_8192_value)/sizeof(BN_ULONG),
	(sizeof bn_group_8192_value)/sizeof(BN_ULONG),
	0,
	BN_FLG_STATIC_DATA
};

static BN_ULONG bn_generator_19_value[] = {19} ;
static BIGNUM bn_generator_19 = {
	bn_generator_19_value,
	1,
	1,
	0,
	BN_FLG_STATIC_DATA
};
static BN_ULONG bn_generator_5_value[] = {5} ;
static BIGNUM bn_generator_5 = {
	bn_generator_5_value,
	1,
	1,
	0,
	BN_FLG_STATIC_DATA
};
static BN_ULONG bn_generator_2_value[] = {2} ;
static BIGNUM bn_generator_2 = {
	bn_generator_2_value,
	1,
	1,
	0,
	BN_FLG_STATIC_DATA
};

static SRP_gN knowngN[] = {
	{"8192",&bn_generator_19 , &bn_group_8192},
	{"6144",&bn_generator_5 , &bn_group_6144},
	{"4096",&bn_generator_5 , &bn_group_4096},
	{"3072",&bn_generator_5 , &bn_group_3072},
	{"2048",&bn_generator_2 , &bn_group_2048},
	{"1536",&bn_generator_2 , &bn_group_1536},
	{"1024",&bn_generator_2 , &bn_group_1024},
};
#define KNOWN_GN_NUMBER sizeof(knowngN) / sizeof(SRP_gN)

/* end of generated data */
