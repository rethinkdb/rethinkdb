{
  "name": "cmd-shim",
  "version": "1.0.1",
  "description": "Used in npm for command line application support",
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ForbesLindesay/cmd-shim.git"
  },
  "license": "BSD",
  "optionalDependencies": {
    "graceful-fs": "2"
  },
  "dependencies": {
    "mkdirp": "~0.3.3",
    "graceful-fs": "2"
  },
  "devDependencies": {
    "tap": "~0.4.1",
    "rimraf": "~2.1.4"
  },
  "readme": "# cmd-shim\n\nThe cmd-shim used in npm to create executable scripts on Windows,\nsince symlinks are not suitable for this purpose there.\n\nOn Unix systems, you should use a symbolic link instead.\n\n## Installation\n\n```\nnpm install cmd-shim\n```\n\n## API\n\n### cmdShim(from, to, cb)\n\nCreate a cmd shim at `to` for the command line program at `from`.\ne.g.\n\n```javascript\nvar cmdShim = require('cmd-shim');\ncmdShim(__dirname + '/cli.js', '/usr/bin/command-name', function (err) {\n  if (err) throw err;\n});\n```\n\n### cmdShim.ifExists(from, to, cb)\n\nThe same as above, but will just continue if the file does not exist.\nSource:\n\n```javascript\nfunction cmdShimIfExists (from, to, cb) {\n  fs.stat(from, function (er) {\n    if (er) return cb()\n    cmdShim(from, to, cb)\n  })\n}\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ForbesLindesay/cmd-shim/issues"
  },
  "_id": "cmd-shim@1.0.1",
  "_from": "cmd-shim@latest"
}
