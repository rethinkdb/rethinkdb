# Copyright 2013 the V8 project authors. All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of Google Inc. nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

[
[ALWAYS, {
  # Flaky tests.
  # BUG(v8:2989).
  'dfg-inline-arguments-become-double': [PASS, FAIL],
  'dfg-inline-arguments-become-int32': [PASS, FAIL],
  'dfg-inline-arguments-reset': [PASS, FAIL],
  'dfg-inline-arguments-reset-changetype': [PASS, FAIL],
  # TODO(turbofan): We run out of stack earlier on 64-bit for now.
  'fast/js/deep-recursion-test': [PASS, NO_VARIANTS],
  # TODO(bmeurer,svenpanne): Investigate test failure.
  'fast/js/toString-number': [SKIP],
}],  # ALWAYS
['mode == debug', {
  # Too slow in debug mode.
  'dfg-int-overflow-in-loop': [SKIP],
  'dfg-double-vote-fuzz': [SKIP],
  'reentrant-caching': [SKIP],
  'sort-large-array': [SKIP],
  # Too slow on windows with --nocrankshaft.
  # TODO(mstarzinger): Too slow with TF.
  'array-iterate-backwards': [PASS, NO_VARIANTS],
}],  # 'mode == debug'
['simulator', {
  # Skip tests that timeout with turbofan.
  'dfg-int-overflow-in-loop': [PASS, NO_VARIANTS],
  'array-iterate-backwards': [PASS, NO_VARIANTS],
  'function-apply-aliased': [SKIP],
}],  # 'simulator'
['arch == arm64 and simulator_run == True', {
  'dfg-int-overflow-in-loop': [SKIP],
}],  # 'arch == arm64 and simulator_run == True'


##############################################################################
['gc_stress == True', {
  # Tests taking too long
  'fast/js/excessive-comma-usage': [SKIP]
}],  # 'gc_stress == True'

['gc_stress == True and mode == debug', {
  # Skip tests that timout with turbofan.
  'array-iterate-backwards': [PASS, NO_VARIANTS]
}],  # 'gc_stress == True and mode == debug'

##############################################################################
]
